SYSTEM cycloneIII_3c120_niosII_application_selector_sopc
{
   System_Wizard_Version = "10.10";
   System_Wizard_Build = "153";
   # 
   # Generated by: com.altera.sopcmodel.ensemble.EnsembleGeneratePTF
   # Date: 2010.12.16.14:23:46
   # 
   #    clock_source "clk"
   #    clock_source "clk_125"
   #    altera_avalon_pll "pll"
   #    altera_nios2 "cpu"
   #    altera_avalon_onchip_memory2 "descriptor_memory"
   #    altera_avalon_pipeline_bridge "pipeline_bridge_before_tristate_bridge"
   #    altera_avalon_tri_state_bridge "flash_tristate_bridge"
   #    altera_avalon_cfi_flash "ext_flash"
   #    cycloneIII_3c120_devkit_maxII_interface "max2"
   #    altera_avalon_clock_crossing "sdhc_ddr_clock_bridge"
   #    altmemddr2 "ddr2_sdram"
   #    altmemddr2 "ddr2_sdram_1"
   #    altera_avalon_clock_crossing "cpu_ddr_clock_bridge"
   #    altera_avalon_clock_crossing "cpu_ddr_1_clock_bridge"
   #    altera_avalon_clock_crossing "slow_peripheral_bridge"
   #    altera_avalon_clock_crossing "tse_ddr_clock_bridge"
   #    altera_avalon_sgdma "sgdma_tx"
   #    altera_avalon_sgdma "sgdma_rx"
   #    altera_avalon_sgdma "lcd_sgdma"
   #    triple_speed_ethernet "tse_mac"
   #    altera_avalon_timer "sys_clk_timer"
   #    altera_avalon_timer "high_res_timer"
   #    altera_avalon_sysid "sysid"
   #    altera_avalon_performance_counter "performance_counter"
   #    altera_avalon_jtag_uart "jtag_uart"
   #    altera_avalon_uart "uart1"
   #    altera_avalon_pio "button_pio"
   #    altera_avalon_pio "led_pio"
   #    altera_avalon_pio "pio_id_eeprom_scl"
   #    altera_avalon_pio "lcd_i2c_scl"
   #    altera_avalon_pio "lcd_i2c_en"
   #    altera_avalon_pio "pio_id_eeprom_dat"
   #    altera_avalon_pio "lcd_i2c_sdat"
   #    altera_avalon_pio "touch_panel_pen_irq_n"
   #    altera_avalon_spi "touch_panel_spi"
   #    timing_adapter "lcd_ta_sgdma_to_fifo"
   #    altera_avalon_fifo "lcd_pixel_fifo"
   #    timing_adapter "lcd_ta_fifo_to_dfa"
   #    data_format_adapter "lcd_64_to_32_bits_dfa"
   #    altera_avalon_pixel_converter "lcd_pixel_converter"
   #    data_format_adapter "lcd_32_to_8_bits_dfa"
   #    altera_avalon_video_sync_generator "lcd_sync_generator"
   #    sls_sdhc_top "sls_sdhc"
   # 
   #    Contains 117 connections.
   # 
   Builder_Application = "sopc_builder_ca";
   #. values for Builder_Application are:
   #.    sopc_builder_preview --> 6.1p, 7.0p prerelease versions
   #.    sopc_builder_ca      --> 7.1 and later
   #.    (missing) --> 6.0 or earlier
   WIZARD_SCRIPT_ARGUMENTS 
   {
      hdl_language = "verilog";
      device_family = "CYCLONEIII";
      device_family_id = "CYCLONEIII";
      generate_sdk = "0";
      do_build_sim = "0";
      hardcopy_compatible = "0";
      CLOCKS 
      {
         CLOCK clk
         {
            frequency = "50000000";
            source = "External";
            Is_Clock_Source = "0";
            display_name = "clk";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "clk.clk";
         }
         CLOCK clk_125
         {
            frequency = "125000000";
            source = "External";
            Is_Clock_Source = "0";
            display_name = "clk_125";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "clk_125.clk";
         }
         CLOCK pll_c0
         {
            frequency = "100000000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "c0 from pll";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "pll.c0";
         }
         CLOCK pll_c0_out
         {
            frequency = "100000000";
            source = "pll_c0";
            Is_Clock_Source = "0";
            display_name = "pll_c0_out";
         }
         CLOCK pll_c2
         {
            frequency = "60000000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "c2 from pll";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "pll.c2";
         }
         CLOCK pll_c2_out
         {
            frequency = "60000000";
            source = "pll_c2";
            Is_Clock_Source = "0";
            display_name = "pll_c2_out";
         }
         CLOCK ddr2_sdram_phy_clk
         {
            frequency = "76925000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "phy_clk from ddr2_sdram";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ddr2_sdram.sysclk";
         }
         CLOCK ddr2_sdram_phy_clk_out
         {
            frequency = "76925000";
            source = "ddr2_sdram_phy_clk";
            Is_Clock_Source = "0";
            display_name = "ddr2_sdram_phy_clk_out";
         }
         CLOCK ddr2_sdram_aux_full_rate_clk
         {
            frequency = "153850000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "aux_full_rate_clk from ddr2_sdram";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ddr2_sdram.auxfull";
         }
         CLOCK ddr2_sdram_aux_full_rate_clk_out
         {
            frequency = "153850000";
            source = "ddr2_sdram_aux_full_rate_clk";
            Is_Clock_Source = "0";
            display_name = "ddr2_sdram_aux_full_rate_clk_out";
         }
         CLOCK ddr2_sdram_aux_half_rate_clk
         {
            frequency = "76925000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "aux_half_rate_clk from ddr2_sdram";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ddr2_sdram.auxhalf";
         }
         CLOCK ddr2_sdram_aux_half_rate_clk_out
         {
            frequency = "76925000";
            source = "ddr2_sdram_aux_half_rate_clk";
            Is_Clock_Source = "0";
            display_name = "ddr2_sdram_aux_half_rate_clk_out";
         }
         CLOCK ddr2_sdram_1_phy_clk
         {
            frequency = "153850000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "phy_clk from ddr2_sdram_1";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ddr2_sdram_1.sysclk";
         }
         CLOCK ddr2_sdram_1_phy_clk_out
         {
            frequency = "153850000";
            source = "ddr2_sdram_1_phy_clk";
            Is_Clock_Source = "0";
            display_name = "ddr2_sdram_1_phy_clk_out";
         }
         CLOCK ddr2_sdram_1_aux_full_rate_clk
         {
            frequency = "153850000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "aux_full_rate_clk from ddr2_sdram_1";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ddr2_sdram_1.auxfull";
         }
         CLOCK ddr2_sdram_1_aux_full_rate_clk_out
         {
            frequency = "153850000";
            source = "ddr2_sdram_1_aux_full_rate_clk";
            Is_Clock_Source = "0";
            display_name = "ddr2_sdram_1_aux_full_rate_clk_out";
         }
         CLOCK ddr2_sdram_1_aux_half_rate_clk
         {
            frequency = "76925000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "aux_half_rate_clk from ddr2_sdram_1";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "ddr2_sdram_1.auxhalf";
         }
         CLOCK ddr2_sdram_1_aux_half_rate_clk_out
         {
            frequency = "76925000";
            source = "ddr2_sdram_1_aux_half_rate_clk";
            Is_Clock_Source = "0";
            display_name = "ddr2_sdram_1_aux_half_rate_clk_out";
         }
      }
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      clock_freq = "50000000";
      board_class = "";
      view_master_columns = "1";
      view_master_priorities = "0";
      generate_hdl = "";
      bustype_column_width = "0";
      clock_column_width = "80";
      name_column_width = "75";
      desc_column_width = "75";
      base_column_width = "75";
      end_column_width = "75";
      BOARD_INFO 
      {
         altera_avalon_cfi_flash 
         {
            reference_designators = "";
         }
      }
   }
   MODULE pll
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "16";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "16";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT resetrequest
            {
               type = "resetrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "clk";
            Has_Clock = "1";
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x000000c0";
            }
            Base_Address = "0x080000c0";
            Has_IRQ = "0";
            Date_Modified = "";
            Instantiate_In_System_Module = "1";
            Requires_Internal_Clock_Promotion = "Yes";
            Is_Clock_Source = "1";
            Address_Group = "0";
         }
      }
      PORT_WIRING 
      {
         PORT c0
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT c2
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT areset
         {
            Is_Enabled = "0";
            direction = "input";
            width = "1";
         }
         PORT locked
         {
            Is_Enabled = "0";
            direction = "output";
            width = "1";
         }
         PORT pfdena
         {
            Is_Enabled = "0";
            direction = "input";
            width = "1";
         }
         PORT pllena
         {
            Is_Enabled = "0";
            direction = "input";
            width = "1";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         areset = "None";
         pfdena = "None";
         locked = "None";
         pllena = "None";
         scanclk = "None";
         scandata = "None";
         scanread = "None";
         scanwrite = "None";
         scanclkena = "None";
         scanaclr = "None";
         scandataout = "None";
         scandone = "None";
         configupdate = "None";
         phasecounterselect = "None";
         phasedone = "None";
         phaseupdown = "None";
         phasestep = "None";
         UI_CONTROL 
         {
            pllena_port_exist = "0";
            areset_port_exist = "0";
            pfdena_port_exist = "0";
            locked_port_exist = "0";
         }
         ALTPLL_PORTS 
         {
            PORT inclk0
            {
               Is_Enabled = "1";
               direction = "input";
               width = "1";
            }
            PORT c0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "out_clk";
               width = "1";
            }
            PORT c2
            {
               Is_Enabled = "1";
               direction = "output";
               type = "out_clk";
               width = "1";
            }
         }
         CLOCK_SOURCES 
         {
            CLOCK c0
            {
               DIVIDE_BY = "1";
               DUTY_CYCLE = "50";
               MULTIPLY_BY = "2";
               PHASE_SHIFT = "0";
               clk_index = "0";
               clock_freq = "100000000";
               clock_unit = "MHz";
               type = "out_clk";
            }
            CLOCK c2
            {
               DIVIDE_BY = "5";
               DUTY_CYCLE = "50";
               MULTIPLY_BY = "6";
               PHASE_SHIFT = "0";
               clk_index = "2";
               clock_freq = "60000000";
               clock_unit = "MHz";
               type = "out_clk";
            }
         }
         CLOCK_INFO 
         {
            CLOCK inclk0
            {
               clock_freq = "50000000";
               clock_unit = "MHz";
               type = "in_clk";
            }
         }
         CNX_INFO 
         {
            CONSTANT 
            {
               STRING 
               {
                  BANDWIDTH_TYPE = "AUTO";
                  CLK0_PHASE_SHIFT = "0";
                  CLK2_PHASE_SHIFT = "0";
                  INTENDED_DEVICE_FAMILY = "Cyclone III";
                  LPM_TYPE = "altpll";
                  OPERATION_MODE = "NO_COMPENSATION";
                  PLL_TYPE = "Fast";
                  PORT_ACTIVECLOCK = "PORT_UNUSED";
                  PORT_ARESET = "PORT_UNUSED";
                  PORT_CLKBAD0 = "PORT_UNUSED";
                  PORT_CLKBAD1 = "PORT_UNUSED";
                  PORT_CLKLOSS = "PORT_UNUSED";
                  PORT_CLKSWITCH = "PORT_UNUSED";
                  PORT_CONFIGUPDATE = "PORT_UNUSED";
                  PORT_FBIN = "PORT_UNUSED";
                  PORT_INCLK0 = "PORT_USED";
                  PORT_INCLK1 = "PORT_UNUSED";
                  PORT_LOCKED = "PORT_UNUSED";
                  PORT_PFDENA = "PORT_UNUSED";
                  PORT_PHASECOUNTERSELECT = "PORT_UNUSED";
                  PORT_PHASEDONE = "PORT_UNUSED";
                  PORT_PHASESTEP = "PORT_UNUSED";
                  PORT_PHASEUPDOWN = "PORT_UNUSED";
                  PORT_PLLENA = "PORT_UNUSED";
                  PORT_SCANACLR = "PORT_UNUSED";
                  PORT_SCANCLK = "PORT_UNUSED";
                  PORT_SCANCLKENA = "PORT_UNUSED";
                  PORT_SCANDATA = "PORT_UNUSED";
                  PORT_SCANDATAOUT = "PORT_UNUSED";
                  PORT_SCANDONE = "PORT_UNUSED";
                  PORT_SCANREAD = "PORT_UNUSED";
                  PORT_SCANWRITE = "PORT_UNUSED";
                  PORT_clk0 = "PORT_USED";
                  PORT_clk1 = "PORT_UNUSED";
                  PORT_clk2 = "PORT_USED";
                  PORT_clk3 = "PORT_UNUSED";
                  PORT_clk4 = "PORT_UNUSED";
                  PORT_clk5 = "PORT_UNUSED";
                  PORT_clkena0 = "PORT_UNUSED";
                  PORT_clkena1 = "PORT_UNUSED";
                  PORT_clkena2 = "PORT_UNUSED";
                  PORT_clkena3 = "PORT_UNUSED";
                  PORT_clkena4 = "PORT_UNUSED";
                  PORT_clkena5 = "PORT_UNUSED";
                  PORT_extclk0 = "PORT_UNUSED";
                  PORT_extclk1 = "PORT_UNUSED";
                  PORT_extclk2 = "PORT_UNUSED";
                  PORT_extclk3 = "PORT_UNUSED";
               }
               NUMERIC 
               {
                  CLK0_DIVIDE_BY = "1";
                  CLK0_DUTY_CYCLE = "50";
                  CLK0_MULTIPLY_BY = "2";
                  CLK2_DIVIDE_BY = "5";
                  CLK2_DUTY_CYCLE = "50";
                  CLK2_MULTIPLY_BY = "6";
                  INCLK0_INPUT_FREQUENCY = "20000";
                  WIDTH_CLOCK = "5";
               }
            }
            LIBRARY = "altera_mf altera_mf.altera_mf_components.all";
            PRIVATE 
            {
               STRING 
               {
                  ACTIVECLK_CHECK = "0";
                  BANDWIDTH = "1.000";
                  BANDWIDTH_FEATURE_ENABLED = "1";
                  BANDWIDTH_FREQ_UNIT = "MHz";
                  BANDWIDTH_PRESET = "Low";
                  BANDWIDTH_USE_AUTO = "1";
                  BANDWIDTH_USE_PRESET = "0";
                  CLKBAD_SWITCHOVER_CHECK = "0";
                  CLKLOSS_CHECK = "0";
                  CLKSWITCH_CHECK = "0";
                  CNX_NO_COMPENSATE_RADIO = "1";
                  CREATE_CLKBAD_CHECK = "0";
                  CREATE_INCLK1_CHECK = "0";
                  CUR_DEDICATED_CLK = "c0";
                  CUR_FBIN_CLK = "e0";
                  DEVICE_SPEED_GRADE = "Any";
                  DUTY_CYCLE0 = "50.00000000";
                  DUTY_CYCLE2 = "50.00000000";
                  EXPLICIT_SWITCHOVER_COUNTER = "0";
                  EXT_FEEDBACK_RADIO = "0";
                  GLOCKED_COUNTER_EDIT_CHANGED = "1";
                  GLOCKED_FEATURE_ENABLED = "0";
                  GLOCKED_MODE_CHECK = "0";
                  HAS_MANUAL_SWITCHOVER = "1";
                  INCLK0_FREQ_EDIT = "50.0";
                  INCLK0_FREQ_UNIT_COMBO = "MHz";
                  INCLK1_FREQ_EDIT = "100.000";
                  INCLK1_FREQ_EDIT_CHANGED = "1";
                  INCLK1_FREQ_UNIT_CHANGED = "1";
                  INCLK1_FREQ_UNIT_COMBO = "MHz";
                  INTENDED_DEVICE_FAMILY = "Cyclone III";
                  INT_FEEDBACK__MODE_RADIO = "1";
                  LOCKED_OUTPUT_CHECK = "0";
                  LONG_SCAN_RADIO = "1";
                  LVDS_MODE_DATA_RATE = "Not Available";
                  LVDS_PHASE_SHIFT_UNIT0 = "ps";
                  LVDS_PHASE_SHIFT_UNIT2 = "ps";
                  MIG_DEVICE_SPEED_GRADE = "Any";
                  MIRROR_CLK0 = "0";
                  MIRROR_CLK2 = "0";
                  NORMAL_MODE_RADIO = "0";
                  OUTPUT_FREQ0 = "100.00000000";
                  OUTPUT_FREQ2 = "100.00000000";
                  OUTPUT_FREQ_MODE0 = "0";
                  OUTPUT_FREQ_MODE2 = "0";
                  OUTPUT_FREQ_UNIT0 = "MHz";
                  OUTPUT_FREQ_UNIT2 = "MHz";
                  PHASE_RECONFIG_FEATURE_ENABLED = "1";
                  PHASE_RECONFIG_INPUTS_CHECK = "0";
                  PHASE_SHIFT0 = "0.00000000";
                  PHASE_SHIFT2 = "0.00000000";
                  PHASE_SHIFT_STEP_ENABLED_CHECK = "0";
                  PHASE_SHIFT_UNIT0 = "ps";
                  PHASE_SHIFT_UNIT2 = "ps";
                  PLL_ADVANCED_PARAM_CHECK = "0";
                  PLL_ARESET_CHECK = "0";
                  PLL_FBMIMIC_CHECK = "0";
                  PLL_PFDENA_CHECK = "0";
                  PRIMARY_CLK_COMBO = "inclk0";
                  RECONFIG_FILE = "altpllpll.mif";
                  SACN_INPUTS_CHECK = "0";
                  SCAN_FEATURE_ENABLED = "1";
                  SELF_RESET_LOCK_LOSS = "0";
                  SHORT_SCAN_RADIO = "0";
                  SPREAD_FEATURE_ENABLED = "0";
                  SPREAD_FREQ = "50.000";
                  SPREAD_FREQ_UNIT = "KHz";
                  SPREAD_PERCENT = "0.500";
                  SPREAD_USE = "0";
                  SRC_SYNCH_COMP_RADIO = "0";
                  STICKY_CLK0 = "1";
                  STICKY_CLK2 = "1";
                  SWITCHOVER_FEATURE_ENABLED = "1";
                  SYNTH_WRAPPER_GEN_POSTFIX = "0";
                  USE_CLK0 = "1";
                  USE_CLK2 = "1";
                  USE_CLKENA0 = "0";
                  USE_CLKENA2 = "0";
                  ZERO_DELAY_RADIO = "0";
               }
               NUMERIC 
               {
                  DIV_FACTOR0 = "1";
                  DIV_FACTOR2 = "5";
                  GLOCK_COUNTER_EDIT = "1048575";
                  LVDS_MODE_DATA_RATE_DIRTY = "0";
                  MULT_FACTOR0 = "2";
                  MULT_FACTOR2 = "6";
                  PLL_AUTOPLL_CHECK = "1";
                  PLL_ENHPLL_CHECK = "0";
                  PLL_FASTPLL_CHECK = "0";
                  PLL_LVDS_PLL_CHECK = "0";
                  PLL_TARGET_HARCOPY_CHECK = "0";
                  SWITCHOVER_COUNT_EDIT = "1";
                  USE_MIL_SPEED_GRADE = "0";
               }
            }
            USED_PORT 
            {
               c0 
               {
                  VALUE_1 = "0";
                  VALUE_2 = "0";
                  VALUE_3 = "0";
                  VALUE_4 = "0";
                  VALUE_5 = "OUTPUT_CLK_EXT";
                  VALUE_6 = "VCC";
                  VALUE_7 = "c0";
               }
               c2 
               {
                  VALUE_1 = "0";
                  VALUE_2 = "0";
                  VALUE_3 = "0";
                  VALUE_4 = "0";
                  VALUE_5 = "OUTPUT_CLK_EXT";
                  VALUE_6 = "VCC";
                  VALUE_7 = "c2";
               }
               inclk0 
               {
                  VALUE_1 = "0";
                  VALUE_2 = "0";
                  VALUE_3 = "0";
                  VALUE_4 = "0";
                  VALUE_5 = "INPUT_CLK_EXT";
                  VALUE_6 = "GND";
                  VALUE_7 = "inclk0";
               }
            }
         }
         Config_Done = "0";
      }
      SYSTEM_BUILDER_INFO 
      {
         Required_Device_Family = "STRATIX,STRATIXII,STRATIXIII,STRATIXIV,STRATIXV,CYCLONE,CYCLONEII,CYCLONEIII,STINGRAY,CYCLONEIVE,TARPON,STRATIXGX,STRATIXIIGX,STRATIXIIGXLITE,ARRIAGX,ARRIAII,ARRIAIIGZ,HARDCOPYII,HARDCOPYIII,HARDCOPYIV";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "pll";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "clk";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " Avalon PLL: <br>
         input clock configured: <b>clk</b>
        ";
         }
      }
      class = "altera_avalon_pll";
      class_version = "7.08101";
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
   }
   MODULE cpu
   {
      MASTER instruction_master
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT i_address
            {
               type = "address";
               width = "29";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT i_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT i_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT i_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT i_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_resetrequest
            {
               type = "resetrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "29";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "";
            Linewrap_Bursts = "";
            Burst_On_Burst_Boundaries_Only = "";
            Always_Burst_Max_Burst = "";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Address_Group = "0";
            Has_IRQ = "0";
            Irq_Scheme = "individual_requests";
            Interrupt_Range = "0-0";
         }
         MEMORY_MAP 
         {
            Entry cpu/jtag_debug_module
            {
               address = "0x09001800";
               span = "0x00000800";
               is_bridge = "0";
            }
            Entry cpu_ddr_1_clock_bridge/s1
            {
               address = "0x1c000000";
               span = "0x04000000";
               is_bridge = "1";
            }
            Entry ddr2_sdram_1/s1
            {
               address = "0x1c000000";
               span = "0x04000000";
               is_bridge = "0";
            }
            Entry pipeline_bridge_before_tristate_bridge/s1
            {
               address = "0x10000000";
               span = "0x08000000";
               is_bridge = "1";
            }
            Entry ext_flash/s1
            {
               address = "0x10000000";
               span = "0x04000000";
               is_bridge = "0";
            }
            Entry max2/s1
            {
               address = "0x14000000";
               span = "0x00000020";
               is_bridge = "0";
            }
         }
      }
      MASTER custom_instruction_master
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "nios_custom_instruction";
            Data_Width = "32";
            Address_Width = "8";
            Is_Custom_Instruction = "1";
            Is_Enabled = "0";
            Max_Address_Width = "8";
            Base_Address = "N/A";
            Is_Visible = "0";
         }
         PORT_WIRING 
         {
            PORT dataa
            {
               type = "dataa";
               width = "32";
               direction = "output";
            }
            PORT datab
            {
               type = "datab";
               width = "32";
               direction = "output";
            }
            PORT result
            {
               type = "result";
               width = "32";
               direction = "input";
            }
            PORT clk_en
            {
               type = "clk_en";
               width = "1";
               direction = "output";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "output";
            }
            PORT start
            {
               type = "start";
               width = "1";
               direction = "output";
            }
            PORT done
            {
               type = "done";
               width = "1";
               direction = "input";
            }
            PORT n
            {
               type = "n";
               width = "8";
               direction = "output";
            }
            PORT a
            {
               type = "a";
               width = "5";
               direction = "output";
            }
            PORT b
            {
               type = "b";
               width = "5";
               direction = "output";
            }
            PORT c
            {
               type = "c";
               width = "5";
               direction = "output";
            }
            PORT readra
            {
               type = "readra";
               width = "1";
               direction = "output";
            }
            PORT readrb
            {
               type = "readrb";
               width = "1";
               direction = "output";
            }
            PORT writerc
            {
               type = "writerc";
               width = "1";
               direction = "output";
            }
         }
      }
      SLAVE jtag_debug_module
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "2048";
            Read_Latency = "0";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "9";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Accepts_External_Connections = "1";
            Requires_Internal_Connections = "";
            MASTERED_BY cpu/data_master
            {
               priority = "1";
               Offset_Address = "0x09001800";
            }
            MASTERED_BY cpu/instruction_master
            {
               priority = "1";
               Offset_Address = "0x09001800";
            }
            Base_Address = "0x09001800";
            Is_Readable = "1";
            Is_Writeable = "1";
            Uses_Tri_State_Data_Bus = "0";
            Has_IRQ = "0";
            JTAG_Hub_Base_Id = "1118278";
            JTAG_Hub_Instance_Id = "0";
            Address_Group = "0";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "NC";
            }
         }
         PORT_WIRING 
         {
            PORT jtag_debug_module_address
            {
               type = "address";
               width = "9";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_begintransfer
            {
               type = "begintransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_select
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
         }
      }
      MASTER data_master
      {
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Irq_Scheme = "individual_requests";
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "29";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Is_Data_Master = "1";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writeable = "1";
            Interrupt_Range = "0-31";
         }
         PORT_WIRING 
         {
            PORT d_irq
            {
               type = "irq";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_address
            {
               type = "address";
               width = "29";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_debugaccess_to_roms
            {
               type = "debugaccess";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry cpu/jtag_debug_module
            {
               address = "0x09001800";
               span = "0x00000800";
               is_bridge = "0";
            }
            Entry cpu_ddr_clock_bridge/s1
            {
               address = "0x00000000";
               span = "0x08000000";
               is_bridge = "1";
            }
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
            Entry lcd_sgdma/csr
            {
               address = "0x04000000";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry cpu_ddr_1_clock_bridge/s1
            {
               address = "0x1c000000";
               span = "0x04000000";
               is_bridge = "1";
            }
            Entry ddr2_sdram_1/s1
            {
               address = "0x1c000000";
               span = "0x04000000";
               is_bridge = "0";
            }
            Entry slow_peripheral_bridge/s1
            {
               address = "0x08000000";
               span = "0x00000400";
               is_bridge = "1";
            }
            Entry button_pio/s1
            {
               address = "0x08000180";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry high_res_timer/s1
            {
               address = "0x08000000";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry jtag_uart/avalon_jtag_slave
            {
               address = "0x08000280";
               span = "0x00000010";
               is_bridge = "0";
            }
            Entry uart1/s1
            {
               address = "0x08000040";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry led_pio/s1
            {
               address = "0x080001a0";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry performance_counter/control_slave
            {
               address = "0x08000080";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry pll/s1
            {
               address = "0x080000c0";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry sys_clk_timer/s1
            {
               address = "0x08000100";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry sysid/control_slave
            {
               address = "0x08000290";
               span = "0x00000010";
               is_bridge = "0";
            }
            Entry lcd_i2c_en/s1
            {
               address = "0x080001c0";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry lcd_i2c_scl/s1
            {
               address = "0x080001e0";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry lcd_i2c_sdat/s1
            {
               address = "0x08000200";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_dat/s1
            {
               address = "0x08000220";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_scl/s1
            {
               address = "0x08000240";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry touch_panel_pen_irq_n/s1
            {
               address = "0x08000260";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry touch_panel_spi/spi_control_port
            {
               address = "0x08000140";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry descriptor_memory/s1
            {
               address = "0x09000000";
               span = "0x00001000";
               is_bridge = "0";
            }
            Entry sgdma_rx/csr
            {
               address = "0x09002500";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry sgdma_tx/csr
            {
               address = "0x09002540";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry tse_mac/control_port
            {
               address = "0x09002000";
               span = "0x00000400";
               is_bridge = "0";
            }
            Entry pipeline_bridge_before_tristate_bridge/s1
            {
               address = "0x10000000";
               span = "0x08000000";
               is_bridge = "1";
            }
            Entry ext_flash/s1
            {
               address = "0x10000000";
               span = "0x04000000";
               is_bridge = "0";
            }
            Entry max2/s1
            {
               address = "0x14000000";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry sls_sdhc/control
            {
               address = "0x09002400";
               span = "0x00000100";
               is_bridge = "0";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         cache_has_dcache = "1";
         cache_dcache_size = "32768";
         cache_dcache_line_size = "32";
         cache_dcache_bursts = "0";
         cache_dcache_ram_block_type = "AUTO";
         num_tightly_coupled_data_masters = "0";
         gui_num_tightly_coupled_data_masters = "0";
         gui_include_tightly_coupled_data_masters = "0";
         gui_omit_avalon_data_master = "0";
         cache_has_icache = "1";
         cache_icache_size = "32768";
         cache_icache_line_size = "32";
         cache_icache_ram_block_type = "AUTO";
         cache_icache_bursts = "0";
         num_tightly_coupled_instruction_masters = "0";
         gui_num_tightly_coupled_instruction_masters = "0";
         gui_include_tightly_coupled_instruction_masters = "0";
         debug_level = "2";
         include_oci = "1";
         oci_num_xbrk = "0";
         oci_num_dbrk = "0";
         oci_dbrk_trace = "0";
         oci_dbrk_pairs = "0";
         oci_onchip_trace = "0";
         oci_offchip_trace = "0";
         oci_data_trace = "0";
         include_third_party_debug_port = "0";
         oci_trace_addr_width = "7";
         oci_debugreq_signals = "0";
         oci_trigger_arming = "1";
         oci_embedded_pll = "0";
         oci_assign_jtag_instance_id = "0";
         oci_jtag_instance_id = "0";
         oci_num_pm = "0";
         oci_pm_width = "32";
         performance_counters_present = "0";
         performance_counters_width = "32";
         always_encrypt = "1";
         debug_simgen = "0";
         activate_model_checker = "0";
         activate_test_end_checker = "0";
         activate_trace = "1";
         activate_monitors = "1";
         clear_x_bits_ld_non_bypass = "1";
         bit_31_bypass_dcache = "1";
         hdl_sim_caches_cleared = "1";
         hbreak_test = "0";
         allow_full_address_range = "0";
         extra_exc_info = "0";
         branch_prediction_type = "Dynamic";
         bht_ptr_sz = "8";
         bht_index_pc_only = "0";
         gui_branch_prediction_type = "Automatic";
         full_waveform_signals = "0";
         export_pcb = "0";
         big_endian = "0";
         avalon_debug_port_present = "0";
         illegal_instructions_trap = "0";
         illegal_memory_access_detection = "0";
         illegal_mem_exc = "0";
         slave_access_error_exc = "0";
         division_error_exc = "0";
         eic_present = "0";
         num_shadow_reg_sets = "0";
         gui_mmu_present = "0";
         mmu_present = "0";
         process_id_num_bits = "8";
         tlb_ptr_sz = "7";
         tlb_num_ways = "16";
         udtlb_num_entries = "6";
         uitlb_num_entries = "4";
         fast_tlb_miss_exc_slave = "";
         fast_tlb_miss_exc_offset = "0x00000000";
         mpu_present = "0";
         mpu_num_data_regions = "8";
         mpu_num_inst_regions = "8";
         mpu_min_data_region_size_log2 = "12";
         mpu_min_inst_region_size_log2 = "12";
         mpu_use_limit = "0";
         hardware_divide_present = "0";
         gui_hardware_divide_setting = "0";
         hardware_multiply_present = "1";
         hardware_multiply_impl = "embedded_mul";
         shift_rot_impl = "fast_le_shift";
         gui_hardware_multiply_setting = "embedded_mul_fast_le_shift";
         reset_slave = "ext_flash/s1";
         break_slave = "cpu/jtag_debug_module";
         exc_slave = "ddr2_sdram_1/s1";
         reset_offset = "0x00100000";
         break_offset = "0x00000020";
         exc_offset = "0x00000040";
         cpu_reset = "0";
         CPU_Implementation = "fast";
         cpu_selection = "f";
         device_family_id = "CYCLONEIII";
         address_stall_present = "1";
         dsp_block_supports_shift = "0";
         mrams_present = "0";
         cpuid_value = "0";
         dont_overwrite_cpuid = "1";
         allow_legacy_sdk = "1";
         legacy_sdk_support = "1";
         inst_addr_width = "29";
         data_addr_width = "29";
         CPU_Architecture = "nios2";
         cache_icache_burst_type = "none";
         oci_sync_depth = "2";
         hardware_divide_impl = "variable_latency";
         hardware_multiply_omits_msw = "1";
         break_slave_override = "";
         break_offset_override = "0x20";
         altera_show_unreleased_features = "0";
         altera_show_unpublished_features = "0";
         altera_internal_test = "0";
         alt_log_port_base = "";
         alt_log_port_type = "";
         cpuid_sz = "1";
         gui_illegal_instructions_trap = "0";
         advanced_exc = "0";
         gui_illegal_memory_access_detection = "0";
         cache_omit_dcache = "0";
         cache_omit_icache = "0";
         omit_instruction_master = "0";
         omit_data_master = "0";
         ras_ptr_sz = "4";
         jtb_ptr_sz = "5";
         ibuf_ptr_sz = "4";
         always_bypass_dcache = "0";
         iss_trace_on = "0";
         iss_trace_warning = "1";
         iss_trace_info = "1";
         iss_trace_disassembly = "0";
         iss_trace_registers = "0";
         iss_trace_instr_count = "0";
         iss_software_debug = "0";
         iss_software_debug_port = "9996";
         iss_memory_dump_start = "";
         iss_memory_dump_end = "";
         Boot_Copier = "boot_loader_cfi.srec";
         Boot_Copier_EPCS = "boot_loader_epcs.srec";
         Boot_Copier_EPCS_SII_SIII_CIII = "boot_loader_epcs_sii_siii_ciii.srec";
         Boot_Copier_BE = "boot_loader_cfi_be.srec";
         Boot_Copier_EPCS_BE = "boot_loader_epcs_be.srec";
         Boot_Copier_EPCS_SII_SIII_CIII_BE = "boot_loader_epcs_sii_siii_ciii_be.srec";
         CONSTANTS 
         {
            CONSTANT __nios_catch_irqs__
            {
               value = "1";
               comment = "Include panic handler for all irqs (needs uart)";
            }
            CONSTANT __nios_use_constructors__
            {
               value = "1";
               comment = "Call c++ static constructors";
            }
            CONSTANT __nios_use_small_printf__
            {
               value = "1";
               comment = "Smaller non-ANSI printf, with no floating point";
            }
            CONSTANT nasys_has_icache
            {
               value = "1";
               comment = "True if instruction cache present";
            }
            CONSTANT nasys_icache_size
            {
               value = "32768";
               comment = "Size in bytes of instruction cache";
            }
            CONSTANT nasys_icache_line_size
            {
               value = "32";
               comment = "Size in bytes of each icache line";
            }
            CONSTANT nasys_icache_line_size_log2
            {
               value = "5";
               comment = "Log2 size in bytes of each icache line";
            }
            CONSTANT nasys_has_dcache
            {
               value = "1";
               comment = "True if instruction cache present";
            }
            CONSTANT nasys_dcache_size
            {
               value = "32768";
               comment = "Size in bytes of data cache";
            }
            CONSTANT nasys_dcache_line_size
            {
               value = "32";
               comment = "Size in bytes of each dcache line";
            }
            CONSTANT nasys_dcache_line_size_log2
            {
               value = "5";
               comment = "Log2 size in bytes of each dcache line";
            }
         }
         license_status = "";
         mainmem_slave = "descriptor_memory/s1";
         datamem_slave = "descriptor_memory/s1";
         maincomm_slave = "";
         germs_monitor_id = "";
      }
      class = "altera_nios2";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         Parameters_Signature = "";
         Is_CPU = "1";
         Instantiate_In_System_Module = "1";
         Required_Device_Family = "STRATIX,STRATIXGX,STRATIXII,STRATIXIIGX,STRATIXIIGXLITE,STRATIXIII,STRATIXIV,STRATIXV,CYCLONE,CYCLONEII,CYCLONEIII,CYCLONEIVE,HARDCOPYIII,ARRIAII,ARRIAIIGZ,TARPON,HARDCOPYIV,STINGRAY";
         Default_Module_Name = "cpu";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            Settings_Summary = "Nios II/f
            <br>&nbsp;&nbsp;32-Kbyte Instruction Cache
            <br>&nbsp;&nbsp;32-Kbyte Data Cache
            <br>&nbsp;&nbsp;JTAG Debug Module
            ";
            MESSAGES 
            {
            }
         }
      }
      iss_model_name = "altera_nios2";
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
      MASTER tightly_coupled_instruction_master_0
      {
         PORT_WIRING 
         {
            # The number and kind of ports that appear on this module
            # depends on the user's wizard-choices.
            # This section will be filled-in by the Generator_Program after
            # the module logic has been created and the ports are known.
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Is_Instruction_Master = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_instruction_master_1
      {
         PORT_WIRING 
         {
            # The number and kind of ports that appear on this module
            # depends on the user's wizard-choices.
            # This section will be filled-in by the Generator_Program after
            # the module logic has been created and the ports are known.
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_instruction_master_2
      {
         PORT_WIRING 
         {
            # The number and kind of ports that appear on this module
            # depends on the user's wizard-choices.
            # This section will be filled-in by the Generator_Program after
            # the module logic has been created and the ports are known.
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_instruction_master_3
      {
         PORT_WIRING 
         {
            # The number and kind of ports that appear on this module
            # depends on the user's wizard-choices.
            # This section will be filled-in by the Generator_Program after
            # the module logic has been created and the ports are known.
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER data_master2
      {
         PORT_WIRING 
         {
            # The number and kind of ports that appear on this module
            # depends on the user's wizard-choices.
            # This section will be filled-in by the Generator_Program after
            # the module logic has been created and the ports are known.
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "1";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
         }
      }
      MASTER tightly_coupled_data_master_0
      {
         PORT_WIRING 
         {
            # The number and kind of ports that appear on this module
            # depends on the user's wizard-choices.
            # This section will be filled-in by the Generator_Program after
            # the module logic has been created and the ports are known.
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_data_master_1
      {
         PORT_WIRING 
         {
            # The number and kind of ports that appear on this module
            # depends on the user's wizard-choices.
            # This section will be filled-in by the Generator_Program after
            # the module logic has been created and the ports are known.
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_data_master_2
      {
         PORT_WIRING 
         {
            # The number and kind of ports that appear on this module
            # depends on the user's wizard-choices.
            # This section will be filled-in by the Generator_Program after
            # the module logic has been created and the ports are known.
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_data_master_3
      {
         PORT_WIRING 
         {
            # The number and kind of ports that appear on this module
            # depends on the user's wizard-choices.
            # This section will be filled-in by the Generator_Program after
            # the module logic has been created and the ports are known.
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      PORT_WIRING 
      {
         PORT jtag_debug_trigout
         {
            width = "1";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT jtag_debug_offchip_trace_clk
         {
            width = "1";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT jtag_debug_offchip_trace_data
         {
            width = "18";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT clkx2
         {
            width = "1";
            direction = "input";
            Is_Enabled = "0";
            visible = "0";
         }
      }
   }
   MODULE descriptor_memory
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "10";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT clken
            {
               type = "clken";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "0cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "4096";
            Read_Latency = "1";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "10";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu/data_master
            {
               priority = "8";
               Offset_Address = "0x09000000";
            }
            MASTERED_BY sgdma_rx/descriptor_read
            {
               priority = "8";
               Offset_Address = "0x09000000";
            }
            MASTERED_BY sgdma_rx/descriptor_write
            {
               priority = "8";
               Offset_Address = "0x09000000";
            }
            MASTERED_BY sgdma_tx/descriptor_read
            {
               priority = "8";
               Offset_Address = "0x09000000";
            }
            MASTERED_BY sgdma_tx/descriptor_write
            {
               priority = "8";
               Offset_Address = "0x09000000";
            }
            Base_Address = "0x09000000";
            Address_Group = "0";
            Has_IRQ = "0";
            Is_Channel = "1";
            Is_Writable = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "NC";
            }
         }
      }
      iss_model_name = "altera_memory";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         allow_mram_sim_contents_only_file = "0";
         ram_block_type = "AUTO";
         init_contents_file = "descriptor_memory";
         non_default_init_file_enabled = "0";
         gui_ram_block_type = "Automatic";
         Writeable = "1";
         dual_port = "0";
         Size_Value = "4096";
         Size_Multiple = "1";
         use_shallow_mem_blocks = "0";
         init_mem_content = "1";
         allow_in_system_memory_content_editor = "0";
         instance_id = "NONE";
         read_during_write_mode = "DONT_CARE";
         ignore_auto_block_type_assignment = "1";
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "chipselect";
               conditional = "1";
            }
            SIGNAL c
            {
               name = "address";
               radix = "hexadecimal";
            }
            SIGNAL d
            {
               name = "byteenable";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL e
            {
               name = "readdata";
               radix = "hexadecimal";
            }
            SIGNAL b
            {
               name = "write";
               conditional = "1";
            }
            SIGNAL f
            {
               name = "writedata";
               radix = "hexadecimal";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO 
      {
         Prohibited_Device_Family = "MERCURY, APEX20K, APEX20KE, APEX20KC, APEXII, ACEX1K, FLEX10KE, EXCALIBUR_ARM, MAXII";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "onchip_memory";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class = "altera_avalon_onchip_memory2";
      class_version = "7.08101";
      HDL_INFO 
      {
      }
      SLAVE s2
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Memory_Device = "1";
            Address_Group = "0";
            Address_Alignment = "dynamic";
            Address_Width = "10";
            Data_Width = "32";
            Has_IRQ = "0";
            Read_Wait_States = "0";
            Write_Wait_States = "0";
            Address_Span = "4096";
            Read_Latency = "1";
            Is_Channel = "1";
            Is_Enabled = "0";
            Is_Writable = "1";
         }
      }
   }
   MODULE pipeline_bridge_before_tristate_bridge
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_address
            {
               type = "address";
               width = "25";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_nativeaddress
            {
               type = "nativeaddress";
               width = "25";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT s1_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT s1_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "134217728";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "5";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "25";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu/data_master
            {
               priority = "8";
               Offset_Address = "0x10000000";
            }
            MASTERED_BY cpu/instruction_master
            {
               priority = "8";
               Offset_Address = "0x10000000";
            }
            Base_Address = "0x10000000";
            Has_IRQ = "0";
            Address_Group = "0";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "NC";
            }
         }
      }
      MASTER m1
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "27";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT m1_address
            {
               type = "address";
               width = "27";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_nativeaddress
            {
               type = "nativeaddress";
               width = "25";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_burstcount
            {
               type = "burstcount";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m1_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m1_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry ext_flash/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
            Entry max2/s1
            {
               address = "0x04000000";
               span = "0x00000020";
               is_bridge = "0";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Is_Downstream = "1";
         Is_Upstream = "1";
         Is_Waitrequest = "1";
         Enable_Arbiterlock = "0";
      }
      class = "altera_avalon_pipeline_bridge";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
   }
   MODULE flash_tristate_bridge
   {
      SLAVE avalon_slave
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "1";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "1";
            Register_Outgoing_Signals = "1";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY pipeline_bridge_before_tristate_bridge/m1
            {
               priority = "1";
               Offset_Address = "N/A";
               Base_Address = "N/A";
            }
            Bridges_To = "tristate_master";
            Base_Address = "N/A";
            Has_IRQ = "0";
            IRQ = "N/A";
            Address_Group = "0";
         }
      }
      MASTER tristate_master
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon_tristate";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Bridges_To = "avalon_slave";
         }
         PORT_WIRING 
         {
         }
         MEMORY_MAP 
         {
            Entry ext_flash/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
            Entry max2/s1
            {
               address = "0x04000000";
               span = "0x00000020";
               is_bridge = "0";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
      class = "altera_avalon_tri_state_bridge";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
   }
   MODULE ext_flash
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT data
            {
               type = "data";
               width = "16";
               direction = "inout";
               Is_Enabled = "1";
               is_shared = "1";
            }
            PORT address
            {
               type = "address";
               width = "25";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "1";
            }
            PORT read_n
            {
               type = "read_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT select_n
            {
               type = "chipselect_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon_tristate";
            Write_Wait_States = "40ns";
            Read_Wait_States = "40ns";
            Hold_Time = "20ns";
            Setup_Time = "80ns";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "1";
            Address_Span = "67108864";
            Read_Latency = "0";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "1";
            Active_CS_Through_Read_Latency = "0";
            Data_Width = "16";
            Address_Width = "25";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY flash_tristate_bridge/tristate_master
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x10000000";
            Has_IRQ = "0";
            Simulation_Num_Lanes = "1";
            Convert_Xs_To_0 = "1";
            Address_Group = "0";
         }
         WIZARD_SCRIPT_ARGUMENTS 
         {
            class = "altera_avalon_cfi_flash";
            Supports_Flash_File_System = "1";
            flash_reference_designator = "";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Setup_Value = "80";
         Wait_Value = "40";
         Hold_Value = "20";
         Timing_Units = "ns";
         Unit_Multiplier = "1";
         Size = "67108864";
      }
      SYSTEM_BUILDER_INFO 
      {
         Simulation_Num_Lanes = "2";
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         Make_Memory_Model = "1";
         Instantiate_In_System_Module = "0";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class = "altera_avalon_cfi_flash";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_flash";
      HDL_INFO 
      {
      }
   }
   MODULE max2
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT we_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT cs_n
            {
               type = "chipselect_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT oe_n
            {
               type = "read_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "0";
            }
            PORT address
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
               is_shared = "1";
            }
            PORT data
            {
               type = "data";
               width = "32";
               direction = "inout";
               Is_Enabled = "1";
               is_shared = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon_tristate";
            Write_Wait_States = "100ns";
            Read_Wait_States = "100ns";
            Hold_Time = "0ns";
            Setup_Time = "0ns";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "32";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Active_CS_Through_Read_Latency = "0";
            Data_Width = "32";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY flash_tristate_bridge/tristate_master
            {
               priority = "1";
               Offset_Address = "0x04000000";
            }
            Base_Address = "0x14000000";
            Address_Group = "0";
         }
      }
      class = "no_legacy_module";
      class_version = "7.08101";
      gtf_class_name = "cycloneIII_3c120_devkit_maxII_interface";
      gtf_class_version = "8.0";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "0";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
   MODULE sdhc_ddr_clock_bridge
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT slave_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_address
            {
               type = "address";
               width = "23";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_nativeaddress
            {
               type = "nativeaddress";
               width = "23";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_writedata
            {
               type = "writedata";
               width = "64";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_readdata
            {
               type = "readdata";
               width = "64";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_byteenable
            {
               type = "byteenable";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "67108864";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "48";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "64";
            Address_Width = "23";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "pll_c0_out";
            Has_Clock = "1";
            MASTERED_BY sls_sdhc/read_master
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY sls_sdhc/write_master
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x00000000";
            Address_Group = "0";
         }
      }
      MASTER m1
      {
         PORT_WIRING 
         {
            PORT master_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "26";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_nativeaddress
            {
               type = "nativeaddress";
               width = "23";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_writedata
            {
               type = "writedata";
               width = "64";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_readdata
            {
               type = "readdata";
               width = "64";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "8";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "64";
            Address_Width = "26";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "ddr2_sdram_phy_clk_out";
            Has_Clock = "1";
         }
         MEMORY_MAP 
         {
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      class = "altera_avalon_clock_crossing";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_clock_crossing";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Upstream_FIFO_Depth = "64";
         Downstream_FIFO_Depth = "8";
         Data_Width = "64";
         Native_Address_Width = "23";
         Use_Byte_Enable = "1";
         Use_Burst_Count = "0";
         Maximum_Burst_Size = "8";
         Upstream_Use_Register = "0";
         Downstream_Use_Register = "0";
         Slave_Synchronizer_Depth = "3";
         Master_Synchronizer_Depth = "3";
         Device_Family = "CYCLONEIII";
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "0";
         Is_Bridge = "1";
         Clock_Source = "clk";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
      PORT_WIRING 
      {
         # The number and kind of ports that appear on this module
         # depends on the user's wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the ports are known.
         #
      }
   }
   MODULE ddr2_sdram
   {
      PORT_WIRING 
      {
         PORT pll_ref_clk
         {
            type = "clk";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT soft_reset_n
         {
            type = "reset_n";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT aux_full_rate_clk
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT aux_half_rate_clk
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_odt
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_clk
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_clk_n
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_cs_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_cke
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_addr
         {
            type = "export";
            width = "13";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_ba
         {
            type = "export";
            width = "2";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_ras_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_cas_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_we_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_dq
         {
            type = "export";
            width = "16";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_dqs
         {
            type = "export";
            width = "2";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_dm
         {
            type = "export";
            width = "2";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_refresh_ack
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_wdata_req
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_init_done
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT reset_phy_clk_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT global_reset_n
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
      }
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT phy_clk
            {
               type = "out_clk";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_address
            {
               type = "address";
               width = "23";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_write_req
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_read_req
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_burstbegin
            {
               type = "beginbursttransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_ready
            {
               type = "waitrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_rdata
            {
               type = "readdata";
               width = "64";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_rdata_valid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_wdata
            {
               type = "writedata";
               width = "64";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_be
            {
               type = "byteenable";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_size
            {
               type = "burstcount";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_request_n
            {
               type = "resetrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "67108864";
            Read_Latency = "0";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "32";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "64";
            Address_Width = "23";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "1";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "ddr2_sdram_phy_clk_out";
            Has_Clock = "1";
            MASTERED_BY sdhc_ddr_clock_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY cpu_ddr_clock_bridge/m1
            {
               priority = "8";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY tse_ddr_clock_bridge/m1
            {
               priority = "8";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY lcd_sgdma/descriptor_read
            {
               priority = "100";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY lcd_sgdma/descriptor_write
            {
               priority = "100";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY lcd_sgdma/m_read
            {
               priority = "50";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x00000000";
            Address_Group = "0";
         }
      }
      iss_model_name = "altera_memory";
      class = "ddr2_high_perf";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         device_family = "Cyclone III";
         datawidth = "16";
         memtype = "DDR2 SDRAM";
         local_burst_length = "1";
         num_chipselects = "1";
         cas_latency = "5.0";
         addr_width = "13";
         ba_width = "2";
         row_width = "13";
         col_width = "10";
         clockspeed = "6500";
         data_width_ratio = "4";
         reg_dimm = "false";
         dq_per_dqs = "8";
         phy_if_type_afi = "true";
         ddrx = "false";
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "clk";
         Has_Clock = "1";
         Default_Module_Name = "ddr2_sdram";
         Required_Device_Family = "STRATIXIIGXLITE,STRATIXIIGX,STRATIXII,STRATIXIII,CYCLONEIII,STINGRAY,STRATIXIV,ARRIAII,TARPON,HARDCOPYIII,HARDCOPYIV,CYCLONEIVE";
         Pins_Assigned_Automatically = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class_version = "8.1";
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "pll_ref_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL b
            {
               name = "soft_reset_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL c
            {
               name = "global_reset_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL d
            {
               name = "reset_phy_clk_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL e
            {
               name = "reset_request_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL f
            {
               name = "phy_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL g
            {
               name = "local_address";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL h
            {
               name = "local_size";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL i
            {
               name = "local_burstbegin";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL j
            {
               name = "local_read_req";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL k
            {
               name = "local_write_req";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL l
            {
               name = "local_ready";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL m
            {
               name = "local_wdata";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL n
            {
               name = "local_be";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL o
            {
               name = "local_rdata_valid";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL p
            {
               name = "local_rdata";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL q
            {
               name = "mem_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL r
            {
               name = "mem_cs_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL s
            {
               name = "mem_addr";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL t
            {
               name = "mem_ba";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL u
            {
               name = "mem_ras_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL v
            {
               name = "mem_cas_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL w
            {
               name = "mem_we_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL x
            {
               name = "mem_dm";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL y
            {
               name = "mem_dq";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL z
            {
               name = "mem_dqs";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL aa
            {
               name = "mem_cke";
               radix = "hexadecimal";
               format = "Logic";
            }
         }
      }
   }
   MODULE ddr2_sdram_1
   {
      PORT_WIRING 
      {
         PORT pll_ref_clk
         {
            type = "clk";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT soft_reset_n
         {
            type = "reset_n";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT aux_full_rate_clk
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT aux_half_rate_clk
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_odt
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_clk
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_clk_n
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_cs_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_cke
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
            declare_one_bit_as_std_logic_vector = "1";
         }
         PORT mem_addr
         {
            type = "export";
            width = "13";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_ba
         {
            type = "export";
            width = "2";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_ras_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_cas_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_we_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mem_dq
         {
            type = "export";
            width = "16";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_dqs
         {
            type = "export";
            width = "2";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT mem_dm
         {
            type = "export";
            width = "2";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_refresh_ack
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_wdata_req
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT local_init_done
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT reset_phy_clk_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT global_reset_n
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
      }
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT phy_clk
            {
               type = "out_clk";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_address
            {
               type = "address";
               width = "24";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_write_req
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_read_req
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_burstbegin
            {
               type = "beginbursttransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_ready
            {
               type = "waitrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_rdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_rdata_valid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT local_wdata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_be
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT local_size
            {
               type = "burstcount";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_request_n
            {
               type = "resetrequest_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "67108864";
            Read_Latency = "0";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "32";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "24";
            Maximum_Burst_Size = "2";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "1";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "ddr2_sdram_1_phy_clk_out";
            Has_Clock = "1";
            MASTERED_BY cpu_ddr_1_clock_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x1c000000";
            Address_Group = "0";
         }
      }
      iss_model_name = "altera_memory";
      class = "ddr2_high_perf";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         device_family = "Cyclone III";
         datawidth = "16";
         memtype = "DDR2 SDRAM";
         local_burst_length = "2";
         num_chipselects = "1";
         cas_latency = "5.0";
         addr_width = "13";
         ba_width = "2";
         row_width = "13";
         col_width = "10";
         clockspeed = "6500";
         data_width_ratio = "2";
         reg_dimm = "false";
         dq_per_dqs = "8";
         phy_if_type_afi = "true";
         ddrx = "false";
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "clk_125";
         Has_Clock = "1";
         Default_Module_Name = "ddr2_sdram";
         Required_Device_Family = "STRATIXIIGXLITE,STRATIXIIGX,STRATIXII,STRATIXIII,CYCLONEIII,STINGRAY,STRATIXIV,ARRIAII,TARPON,HARDCOPYIII,HARDCOPYIV,CYCLONEIVE";
         Pins_Assigned_Automatically = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class_version = "8.1";
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "pll_ref_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL b
            {
               name = "soft_reset_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL c
            {
               name = "global_reset_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL d
            {
               name = "reset_phy_clk_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL e
            {
               name = "reset_request_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL f
            {
               name = "phy_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL g
            {
               name = "local_address";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL h
            {
               name = "local_size";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL i
            {
               name = "local_burstbegin";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL j
            {
               name = "local_read_req";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL k
            {
               name = "local_write_req";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL l
            {
               name = "local_ready";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL m
            {
               name = "local_wdata";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL n
            {
               name = "local_be";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL o
            {
               name = "local_rdata_valid";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL p
            {
               name = "local_rdata";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL q
            {
               name = "mem_clk";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL r
            {
               name = "mem_cs_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL s
            {
               name = "mem_addr";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL t
            {
               name = "mem_ba";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL u
            {
               name = "mem_ras_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL v
            {
               name = "mem_cas_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL w
            {
               name = "mem_we_n";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL x
            {
               name = "mem_dm";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL y
            {
               name = "mem_dq";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL z
            {
               name = "mem_dqs";
               radix = "hexadecimal";
               format = "Logic";
            }
            SIGNAL aa
            {
               name = "mem_cke";
               radix = "hexadecimal";
               format = "Logic";
            }
         }
      }
   }
   MODULE cpu_ddr_clock_bridge
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT slave_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_address
            {
               type = "address";
               width = "25";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_nativeaddress
            {
               type = "nativeaddress";
               width = "25";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "134217728";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "48";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "25";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "pll_c0_out";
            Has_Clock = "1";
            MASTERED_BY cpu/data_master
            {
               priority = "8";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x00000000";
            Address_Group = "0";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "NC";
            }
         }
      }
      MASTER m1
      {
         PORT_WIRING 
         {
            PORT master_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "27";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_nativeaddress
            {
               type = "nativeaddress";
               width = "25";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "27";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "ddr2_sdram_phy_clk_out";
            Has_Clock = "1";
         }
         MEMORY_MAP 
         {
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
            Entry lcd_sgdma/csr
            {
               address = "0x04000000";
               span = "0x00000040";
               is_bridge = "0";
            }
         }
      }
      class = "altera_avalon_clock_crossing";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_clock_crossing";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Upstream_FIFO_Depth = "64";
         Downstream_FIFO_Depth = "8";
         Data_Width = "32";
         Native_Address_Width = "25";
         Use_Byte_Enable = "1";
         Use_Burst_Count = "0";
         Maximum_Burst_Size = "8";
         Upstream_Use_Register = "0";
         Downstream_Use_Register = "0";
         Slave_Synchronizer_Depth = "3";
         Master_Synchronizer_Depth = "3";
         Device_Family = "CYCLONEIII";
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "0";
         Is_Bridge = "1";
         Clock_Source = "clk";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
      PORT_WIRING 
      {
         # The number and kind of ports that appear on this module
         # depends on the user's wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the ports are known.
         #
      }
   }
   MODULE cpu_ddr_1_clock_bridge
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT slave_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_address
            {
               type = "address";
               width = "24";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_nativeaddress
            {
               type = "nativeaddress";
               width = "24";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "67108864";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "48";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "24";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "pll_c0_out";
            Has_Clock = "1";
            MASTERED_BY cpu/data_master
            {
               priority = "8";
               Offset_Address = "0x1c000000";
            }
            MASTERED_BY cpu/instruction_master
            {
               priority = "8";
               Offset_Address = "0x1c000000";
            }
            Base_Address = "0x1c000000";
            Address_Group = "0";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "NC";
            }
         }
      }
      MASTER m1
      {
         PORT_WIRING 
         {
            PORT master_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "26";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_nativeaddress
            {
               type = "nativeaddress";
               width = "24";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "26";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "ddr2_sdram_1_phy_clk_out";
            Has_Clock = "1";
         }
         MEMORY_MAP 
         {
            Entry ddr2_sdram_1/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      class = "altera_avalon_clock_crossing";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_clock_crossing";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Upstream_FIFO_Depth = "64";
         Downstream_FIFO_Depth = "8";
         Data_Width = "32";
         Native_Address_Width = "24";
         Use_Byte_Enable = "1";
         Use_Burst_Count = "0";
         Maximum_Burst_Size = "8";
         Upstream_Use_Register = "0";
         Downstream_Use_Register = "0";
         Slave_Synchronizer_Depth = "3";
         Master_Synchronizer_Depth = "3";
         Device_Family = "CYCLONEIII";
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "0";
         Is_Bridge = "1";
         Clock_Source = "clk";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
      PORT_WIRING 
      {
         # The number and kind of ports that appear on this module
         # depends on the user's wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the ports are known.
         #
      }
   }
   MODULE slow_peripheral_bridge
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT slave_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_address
            {
               type = "address";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_nativeaddress
            {
               type = "nativeaddress";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "1024";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "33";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "8";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "pll_c0_out";
            Has_Clock = "1";
            MASTERED_BY cpu/data_master
            {
               priority = "1";
               Offset_Address = "0x08000000";
            }
            Base_Address = "0x08000000";
            Address_Group = "0";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "NC";
            }
         }
      }
      MASTER m1
      {
         PORT_WIRING 
         {
            PORT master_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "10";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_nativeaddress
            {
               type = "nativeaddress";
               width = "8";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "10";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "pll_c2_out";
            Has_Clock = "1";
         }
         MEMORY_MAP 
         {
            Entry button_pio/s1
            {
               address = "0x00000180";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry high_res_timer/s1
            {
               address = "0x00000000";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry jtag_uart/avalon_jtag_slave
            {
               address = "0x00000280";
               span = "0x00000010";
               is_bridge = "0";
            }
            Entry uart1/s1
            {
               address = "0x00000040";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry led_pio/s1
            {
               address = "0x000001a0";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry performance_counter/control_slave
            {
               address = "0x00000080";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry pll/s1
            {
               address = "0x000000c0";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry sys_clk_timer/s1
            {
               address = "0x00000100";
               span = "0x00000040";
               is_bridge = "0";
            }
            Entry sysid/control_slave
            {
               address = "0x00000290";
               span = "0x00000010";
               is_bridge = "0";
            }
            Entry lcd_i2c_en/s1
            {
               address = "0x000001c0";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry lcd_i2c_scl/s1
            {
               address = "0x000001e0";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry lcd_i2c_sdat/s1
            {
               address = "0x00000200";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_dat/s1
            {
               address = "0x00000220";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry pio_id_eeprom_scl/s1
            {
               address = "0x00000240";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry touch_panel_pen_irq_n/s1
            {
               address = "0x00000260";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry touch_panel_spi/spi_control_port
            {
               address = "0x00000140";
               span = "0x00000040";
               is_bridge = "0";
            }
         }
      }
      class = "altera_avalon_clock_crossing";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_clock_crossing";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Upstream_FIFO_Depth = "64";
         Downstream_FIFO_Depth = "16";
         Data_Width = "32";
         Native_Address_Width = "8";
         Use_Byte_Enable = "1";
         Use_Burst_Count = "0";
         Maximum_Burst_Size = "8";
         Upstream_Use_Register = "0";
         Downstream_Use_Register = "0";
         Slave_Synchronizer_Depth = "3";
         Master_Synchronizer_Depth = "3";
         Device_Family = "CYCLONEIII";
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "0";
         Is_Bridge = "1";
         Clock_Source = "clk";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
      PORT_WIRING 
      {
         # The number and kind of ports that appear on this module
         # depends on the user's wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the ports are known.
         #
      }
   }
   MODULE tse_ddr_clock_bridge
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT slave_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_address
            {
               type = "address";
               width = "24";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_nativeaddress
            {
               type = "nativeaddress";
               width = "24";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT slave_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT slave_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "67108864";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "48";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "24";
            Opaque_Bridges_To = "m1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "pll_c0_out";
            Has_Clock = "1";
            MASTERED_BY sgdma_rx/m_write
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            MASTERED_BY sgdma_tx/m_read
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x00000000";
            Address_Group = "0";
         }
      }
      MASTER m1
      {
         PORT_WIRING 
         {
            PORT master_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_address
            {
               type = "address";
               width = "26";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_nativeaddress
            {
               type = "nativeaddress";
               width = "24";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT master_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT master_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "26";
            Opaque_Bridges_To = "s1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "ddr2_sdram_phy_clk_out";
            Has_Clock = "1";
         }
         MEMORY_MAP 
         {
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      class = "altera_avalon_clock_crossing";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_clock_crossing";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Upstream_FIFO_Depth = "64";
         Downstream_FIFO_Depth = "8";
         Data_Width = "32";
         Native_Address_Width = "24";
         Use_Byte_Enable = "1";
         Use_Burst_Count = "0";
         Maximum_Burst_Size = "8";
         Upstream_Use_Register = "0";
         Downstream_Use_Register = "0";
         Slave_Synchronizer_Depth = "3";
         Master_Synchronizer_Depth = "3";
         Device_Family = "CYCLONEIII";
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "0";
         Is_Bridge = "1";
         Clock_Source = "clk";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
      PORT_WIRING 
      {
         # The number and kind of ports that appear on this module
         # depends on the user's wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the ports are known.
         #
      }
   }
   MODULE sgdma_tx
   {
      SLAVE csr
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT system_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT csr_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_address
            {
               type = "address";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "64";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "4";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "2";
            }
            MASTERED_BY cpu/data_master
            {
               priority = "1";
               Offset_Address = "0x09002540";
            }
            Base_Address = "0x09002540";
            Address_Group = "0";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING 
         {
            PORT out_data
            {
               type = "data";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_empty
            {
               type = "empty";
               width = "2";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_error
            {
               type = "error";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      MASTER m_read
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT m_read_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_read_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_read_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_read_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m_read_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry tse_ddr_clock_bridge/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "1";
            }
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      MASTER descriptor_write
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT descriptor_write_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_write_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_write_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_write_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry descriptor_memory/s1
            {
               address = "0x09000000";
               span = "0x00001000";
               is_bridge = "0";
            }
         }
      }
      MASTER descriptor_read
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT descriptor_read_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_read_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry descriptor_memory/s1
            {
               address = "0x09000000";
               span = "0x00001000";
               is_bridge = "0";
            }
         }
      }
      iss_model_name = "altera_avalon_sgdma";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         read_block_data_width = "32";
         write_block_data_width = "32";
         stream_data_width = "32";
         address_width = "32";
         has_read_block = "1";
         has_write_block = "0";
         read_burstcount_width = "4";
         write_burstcount_width = "4";
         burst_transfer = "0";
         always_do_max_burst = "1";
         descriptor_read_burst = "0";
         unaligned_transfer = "0";
         control_slave_data_width = "32";
         control_slave_address_width = "4";
         desc_data_width = "32";
         descriptor_writeback_data_width = "32";
         status_token_data_width = "24";
         bytes_to_transfer_data_width = "16";
         burst_data_width = "8";
         control_data_width = "8";
         status_data_width = "8";
         atlantic_channel_data_width = "4";
         command_fifo_data_width = "104";
         symbols_per_beat = "4";
         in_error_width = "0";
         out_error_width = "1";
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "csr_read";
               conditional = "1";
            }
            SIGNAL b
            {
               name = "csr_write";
               conditional = "1";
            }
            SIGNAL c
            {
               name = "csr_address";
               conditional = "1";
            }
            SIGNAL d
            {
               name = "csr_chipselect";
               conditional = "1";
            }
            SIGNAL e
            {
               name = "csr_writedata";
               conditional = "1";
            }
            SIGNAL f
            {
               name = "csr_readdata";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "sg_dma";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class = "altera_avalon_sgdma";
      class_version = "7.08101";
      HDL_INFO 
      {
      }
   }
   MODULE sgdma_rx
   {
      SLAVE csr
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT system_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT csr_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_address
            {
               type = "address";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "64";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "4";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "1";
            }
            MASTERED_BY cpu/data_master
            {
               priority = "1";
               Offset_Address = "0x09002500";
            }
            Base_Address = "0x09002500";
            Address_Group = "0";
         }
      }
      SLAVE in
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY tse_mac/receive
            {
               priority = "0";
            }
            Address_Group = "1";
            Base_Address = "0x00000000";
         }
         PORT_WIRING 
         {
            PORT in_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_empty
            {
               type = "empty";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_data
            {
               type = "data";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT in_error
            {
               type = "error";
               width = "6";
               direction = "input";
               Is_Enabled = "1";
            }
         }
      }
      MASTER m_write
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT m_write_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_write_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m_write_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m_write_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m_write_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry tse_ddr_clock_bridge/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "1";
            }
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      MASTER descriptor_write
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT descriptor_write_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_write_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_write_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_write_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry descriptor_memory/s1
            {
               address = "0x09000000";
               span = "0x00001000";
               is_bridge = "0";
            }
         }
      }
      MASTER descriptor_read
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT descriptor_read_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_read_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry descriptor_memory/s1
            {
               address = "0x09000000";
               span = "0x00001000";
               is_bridge = "0";
            }
         }
      }
      iss_model_name = "altera_avalon_sgdma";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         read_block_data_width = "32";
         write_block_data_width = "32";
         stream_data_width = "32";
         address_width = "32";
         has_read_block = "0";
         has_write_block = "1";
         read_burstcount_width = "4";
         write_burstcount_width = "4";
         burst_transfer = "0";
         always_do_max_burst = "1";
         descriptor_read_burst = "0";
         unaligned_transfer = "0";
         control_slave_data_width = "32";
         control_slave_address_width = "4";
         desc_data_width = "32";
         descriptor_writeback_data_width = "32";
         status_token_data_width = "24";
         bytes_to_transfer_data_width = "16";
         burst_data_width = "8";
         control_data_width = "8";
         status_data_width = "8";
         atlantic_channel_data_width = "4";
         command_fifo_data_width = "104";
         symbols_per_beat = "4";
         in_error_width = "6";
         out_error_width = "0";
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "csr_read";
               conditional = "1";
            }
            SIGNAL b
            {
               name = "csr_write";
               conditional = "1";
            }
            SIGNAL c
            {
               name = "csr_address";
               conditional = "1";
            }
            SIGNAL d
            {
               name = "csr_chipselect";
               conditional = "1";
            }
            SIGNAL e
            {
               name = "csr_writedata";
               conditional = "1";
            }
            SIGNAL f
            {
               name = "csr_readdata";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "sg_dma";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class = "altera_avalon_sgdma";
      class_version = "7.08101";
      HDL_INFO 
      {
      }
   }
   MODULE lcd_sgdma
   {
      SLAVE csr
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT system_reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT csr_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_address
            {
               type = "address";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT csr_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "64";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "4";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "0";
            }
            MASTERED_BY cpu_ddr_clock_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x04000000";
            }
            Base_Address = "0x04000000";
            Address_Group = "0";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING 
         {
            PORT out_data
            {
               type = "data";
               width = "64";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_empty
            {
               type = "empty";
               width = "3";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      MASTER m_read
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "64";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT m_read_readdata
            {
               type = "readdata";
               width = "64";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_read_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_read_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT m_read_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT m_read_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      MASTER descriptor_write
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT descriptor_write_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_write_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_write_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_write_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      MASTER descriptor_read
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT descriptor_read_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT descriptor_read_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT descriptor_read_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      iss_model_name = "altera_avalon_sgdma";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         read_block_data_width = "64";
         write_block_data_width = "64";
         stream_data_width = "64";
         address_width = "32";
         has_read_block = "1";
         has_write_block = "0";
         read_burstcount_width = "4";
         write_burstcount_width = "4";
         burst_transfer = "0";
         always_do_max_burst = "1";
         descriptor_read_burst = "0";
         unaligned_transfer = "0";
         control_slave_data_width = "32";
         control_slave_address_width = "4";
         desc_data_width = "32";
         descriptor_writeback_data_width = "32";
         status_token_data_width = "24";
         bytes_to_transfer_data_width = "16";
         burst_data_width = "8";
         control_data_width = "8";
         status_data_width = "8";
         atlantic_channel_data_width = "4";
         command_fifo_data_width = "104";
         symbols_per_beat = "8";
         in_error_width = "0";
         out_error_width = "0";
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "csr_read";
               conditional = "1";
            }
            SIGNAL b
            {
               name = "csr_write";
               conditional = "1";
            }
            SIGNAL c
            {
               name = "csr_address";
               conditional = "1";
            }
            SIGNAL d
            {
               name = "csr_chipselect";
               conditional = "1";
            }
            SIGNAL e
            {
               name = "csr_writedata";
               conditional = "1";
            }
            SIGNAL f
            {
               name = "csr_readdata";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "sg_dma";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "ddr2_sdram_phy_clk_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class = "altera_avalon_sgdma";
      class_version = "7.08101";
      HDL_INFO 
      {
      }
   }
   MODULE tse_mac
   {
      SLAVE transmit
      {
         PORT_WIRING 
         {
            PORT ff_tx_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ff_tx_data
            {
               type = "data";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ff_tx_eop
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ff_tx_err
            {
               type = "error";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ff_tx_mod
            {
               type = "empty";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ff_tx_rdy
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT ff_tx_sop
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ff_tx_wren
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            Clock_Source = "pll_c0_out";
            Has_Clock = "1";
            MASTERED_BY sgdma_tx/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
         }
      }
      MASTER receive
      {
         PORT_WIRING 
         {
            PORT ff_rx_clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ff_rx_data
            {
               type = "data";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT ff_rx_dval
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT ff_rx_eop
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT ff_rx_mod
            {
               type = "empty";
               width = "2";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT ff_rx_rdy
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ff_rx_sop
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT rx_err
            {
               type = "error";
               width = "6";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Clock_Source = "pll_c0_out";
            Has_Clock = "1";
         }
      }
      SLAVE control_port
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "1024";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "8";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "pll_c0_out";
            Has_Clock = "1";
            MASTERED_BY cpu/data_master
            {
               priority = "1";
               Offset_Address = "0x09002000";
            }
            Base_Address = "0x09002000";
            Address_Group = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "NC";
            }
         }
      }
      PORT_WIRING 
      {
         PORT gm_rx_d
         {
            type = "export";
            width = "8";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT gm_rx_dv
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT gm_rx_err
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT gm_tx_d
         {
            type = "export";
            width = "8";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT gm_tx_en
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT gm_tx_err
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT m_rx_d
         {
            type = "export";
            width = "4";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT m_rx_en
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT m_rx_err
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT m_tx_d
         {
            type = "export";
            width = "4";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT m_tx_en
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT m_tx_err
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT m_rx_col
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT m_rx_crs
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT tx_clk
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT rx_clk
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT set_10
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT set_1000
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT ena_10
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT eth_mode
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mdio_out
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mdio_oen
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT mdio_in
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT mdc
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         UNASSIGNED = "unassigned";
         TRANSMIT_FIFO_DEPTH = "1024";
         RECEIVE_FIFO_DEPTH = "1024";
         FIFO_WIDTH = "32";
         ENABLE_MACLITE = "0";
         MACLITE_GIGE = "0";
         USE_MDIO = "1";
         NUMBER_OF_CHANNEL = "1";
         NUMBER_OF_MAC_MDIO_SHARED = "1";
         IS_MULTICHANNEL_MAC = "0";
         MDIO_SHARED = "0";
         REGISTER_SHARED = "0";
         PCS = "0";
         PCS_SGMII = "0";
         PCS_ID = "0";
         Is_Ethernet_Mac = "1";
      }
      SIMULATION 
      {
         Module_Name = "tse_mac_loopback";
         DISPLAY 
         {
            SIGNAL gm_rx_d
            {
               name = "gm_rx_d";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL gm_rx_dv
            {
               name = "gm_rx_dv";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL gm_rx_err
            {
               name = "gm_rx_err";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL gm_tx_d
            {
               name = "gm_tx_d";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL gm_tx_en
            {
               name = "gm_tx_en";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL gm_tx_err
            {
               name = "gm_tx_err";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL m_rx_d
            {
               name = "m_rx_d";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL m_rx_en
            {
               name = "m_rx_en";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL m_rx_err
            {
               name = "m_rx_err";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL m_tx_d
            {
               name = "m_tx_d";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL m_tx_en
            {
               name = "m_tx_en";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL m_tx_err
            {
               name = "m_tx_err";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL m_rx_col
            {
               name = "m_rx_col";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL m_rx_crs
            {
               name = "m_rx_crs";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL tx_clk
            {
               name = "tx_clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL rx_clk
            {
               name = "rx_clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL set_10
            {
               name = "set_10";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL set_1000
            {
               name = "set_1000";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL ena_10
            {
               name = "ena_10";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL eth_mode
            {
               name = "eth_mode";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL mdio_out
            {
               name = "mdio_out";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL mdio_oen
            {
               name = "mdio_oen";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL mdio_in
            {
               name = "mdio_in";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL mdc
            {
               name = "mdc";
               radix = "binary";
               conditional = "1";
            }
         }
         PORT_WIRING 
         {
            PORT tx_clk
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "tx_clk_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT rx_clk
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "rx_clk_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT set_10
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "set_10_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT set_1000
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "set_1000_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT m_rx_d
            {
               type = "export";
               direction = "Output";
               width = "4";
               __exclusive_name = "m_rx_d_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT m_rx_en
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "m_rx_en_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT m_rx_err
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "m_rx_err_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT m_tx_d
            {
               type = "export";
               direction = "Input";
               width = "4";
               __exclusive_name = "m_tx_d_from_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT m_tx_en
            {
               type = "export";
               direction = "Input";
               width = "1";
               __exclusive_name = "m_tx_en_from_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT m_tx_err
            {
               type = "export";
               direction = "Input";
               width = "1";
               __exclusive_name = "m_tx_err_from_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT m_rx_col
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "m_rx_col_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT m_rx_crs
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "m_rx_crs_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT gm_rx_d
            {
               type = "export";
               direction = "Output";
               width = "8";
               __exclusive_name = "gm_rx_d_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT gm_rx_dv
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "gm_rx_dv_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT gm_rx_err
            {
               type = "export";
               direction = "Output";
               width = "1";
               __exclusive_name = "gm_rx_err_to_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT gm_tx_d
            {
               type = "export";
               direction = "Input";
               width = "8";
               __exclusive_name = "gm_tx_d_from_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT gm_tx_en
            {
               type = "export";
               direction = "Input";
               width = "1";
               __exclusive_name = "gm_tx_en_from_the_tse_mac";
               Is_Enabled = "1";
            }
            PORT gm_tx_err
            {
               type = "export";
               direction = "Input";
               width = "1";
               __exclusive_name = "gm_tx_err_from_the_tse_mac";
               Is_Enabled = "1";
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "C:/altera/10.1/quartus/eda/sim_lib/stratixiigx_hssi_atoms.v,C:/altera/10.1/quartus/eda/sim_lib/stratixiv_hssi_atoms.v,tse_mac.vo,tse_mac_loopback.v";
      }
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Pins_Assigned_Automatically = "1";
         Clock_Source = "clk";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class = "triple_speed_ethernet";
      class_version = "10.1";
   }
   MODULE sys_clk_timer
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "16";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "16";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "3";
            }
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000100";
            }
            Base_Address = "0x08000100";
            Address_Group = "0";
         }
      }
      class = "altera_avalon_timer";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_timer";
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            Settings_Summary = "Timer with 10 ms timeout period.";
            Is_Collapsed = "1";
            MESSAGES 
            {
            }
         }
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         always_run = "0";
         fixed_period = "0";
         snapshot = "1";
         period = "10.0";
         period_units = "ms";
         reset_output = "0";
         timeout_pulse_output = "0";
         load_value = "599999";
         counter_size = "32";
         mult = "0.0010";
         ticks_per_sec = "100";
      }
   }
   MODULE high_res_timer
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "16";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "16";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "9";
            }
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000000";
            }
            Base_Address = "0x08000000";
            Address_Group = "0";
         }
      }
      class = "altera_avalon_timer";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_timer";
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            Settings_Summary = "Timer with 10 us timeout period.";
            Is_Collapsed = "1";
            MESSAGES 
            {
            }
         }
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         always_run = "0";
         fixed_period = "0";
         snapshot = "1";
         period = "10.0";
         period_units = "us";
         reset_output = "0";
         timeout_pulse_output = "0";
         load_value = "599";
         counter_size = "32";
         mult = "1.0E-6";
         ticks_per_sec = "100000";
      }
   }
   MODULE sysid
   {
      SLAVE control_slave
      {
         PORT_WIRING 
         {
            PORT clock
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000290";
            }
            Base_Address = "0x08000290";
            Has_IRQ = "0";
            Address_Group = "0";
         }
      }
      class = "altera_avalon_sysid";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Date_Modified = "";
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Fixed_Module_Name = "sysid";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         View 
         {
            Settings_Summary = "No system ID yet.  <br> 
                                  A unique ID is assigned every time <br> 
                                  the system is generated.";
            MESSAGES 
            {
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         id = "0";
         timestamp = "1292480462";
         regenerate_values = "0";
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
      PORT_WIRING 
      {
         # The number and kind of ports that appear on this module
         # depends on the user's wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the ports are known.
         #
      }
   }
   MODULE performance_counter
   {
      SLAVE control_slave
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT begintransfer
            {
               type = "begintransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "0cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "1";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000080";
            }
            Base_Address = "0x08000080";
            Has_IRQ = "0";
            Address_Group = "0";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         how_many_sections = "1";
      }
      class = "altera_avalon_performance_counter";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Date_Modified = "";
         Instantiate_In_System_Module = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
      PORT_WIRING 
      {
         # The number and kind of ports that appear on this module
         # depends on the user's wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the ports are known.
         #
      }
   }
   MODULE jtag_uart
   {
      SLAVE avalon_jtag_slave
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT rst_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT av_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_address
            {
               type = "address";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_read_n
            {
               type = "read_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT av_write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT av_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT dataavailable
            {
               type = "dataavailable";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT readyfordata
            {
               type = "readyfordata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "1";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "1";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            JTAG_Hub_Base_Id = "262254";
            JTAG_Hub_Instance_Id = "0";
            Connection_Limit = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "4";
            }
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000280";
            }
            Base_Address = "0x08000280";
            Address_Group = "0";
         }
      }
      class = "altera_avalon_jtag_uart";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_jtag_uart";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         write_depth = "8";
         read_depth = "8";
         write_threshold = "4";
         read_threshold = "4";
         read_char_stream = "";
         showascii = "1";
         relativepath = "1";
         read_le = "1";
         write_le = "1";
         altera_show_unreleased_jtag_uart_features = "0";
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL av_chipselect
            {
               name = "av_chipselect";
            }
            SIGNAL av_address
            {
               name = "av_address";
               radix = "hexadecimal";
            }
            SIGNAL av_read_n
            {
               name = "av_read_n";
            }
            SIGNAL av_readdata
            {
               name = "av_readdata";
               radix = "hexadecimal";
            }
            SIGNAL av_write_n
            {
               name = "av_write_n";
            }
            SIGNAL av_writedata
            {
               name = "av_writedata";
               radix = "hexadecimal";
            }
            SIGNAL av_waitrequest
            {
               name = "av_waitrequest";
            }
            SIGNAL dataavailable
            {
               name = "dataavailable";
            }
            SIGNAL readyfordata
            {
               name = "readyfordata";
            }
            SIGNAL av_irq
            {
               name = "av_irq";
            }
         }
         INTERACTIVE_IN drive
         {
            enable = "0";
            file = "_input_data_stream.dat";
            mutex = "_input_data_mutex.dat";
            log = "_in.log";
            rate = "100";
            signals = "temp,list";
            exe = "nios2-terminal";
         }
         INTERACTIVE_OUT log
         {
            enable = "1";
            exe = "perl -- atail-f.pl";
            file = "_output_stream.dat";
            radix = "ascii";
            signals = "temp,list";
         }
         Fix_Me_Up = "";
      }
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Iss_Launch_Telnet = "0";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = "<br>Write Depth: 8; Write IRQ Threshold: 4
                <br>Read  Depth: 8; Read  IRQ Threshold: 4";
         }
      }
   }
   MODULE uart1
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT begintransfer
            {
               type = "begintransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT read_n
            {
               type = "read_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "16";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "16";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT dataavailable
            {
               type = "dataavailable";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT readyfordata
            {
               type = "readyfordata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "1cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "1";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "10";
            }
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000040";
            }
            Base_Address = "0x08000040";
            Address_Group = "0";
         }
      }
      PORT_WIRING 
      {
         PORT rxd
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT txd
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT cts_n
         {
            direction = "input";
            width = "1";
            Is_Enabled = "0";
         }
         PORT rts_n
         {
            direction = "output";
            width = "1";
            Is_Enabled = "0";
         }
      }
      class = "altera_avalon_uart";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_uart";
      SYSTEM_BUILDER_INFO 
      {
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Iss_Launch_Telnet = "0";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            Settings_Summary = "8-bit UART with 115200 baud, <br>
                    1 stop bits and N parity";
            Is_Collapsed = "1";
            MESSAGES 
            {
            }
         }
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "  Bus Interface";
               format = "Divider";
            }
            SIGNAL b
            {
               name = "chipselect";
            }
            SIGNAL c
            {
               name = "address";
               radix = "hexadecimal";
            }
            SIGNAL d
            {
               name = "writedata";
               radix = "hexadecimal";
            }
            SIGNAL e
            {
               name = "readdata";
               radix = "hexadecimal";
            }
            SIGNAL f
            {
               name = "  Internals";
               format = "Divider";
            }
            SIGNAL g
            {
               name = "tx_ready";
            }
            SIGNAL h
            {
               name = "tx_data";
               radix = "ascii";
            }
            SIGNAL i
            {
               name = "rx_char_ready";
            }
            SIGNAL j
            {
               name = "rx_data";
               radix = "ascii";
            }
         }
         INTERACTIVE_OUT log
         {
            enable = "0";
            file = "_log_module.txt";
            radix = "ascii";
            signals = "temp,list";
            exe = "perl -- tail-f.pl";
         }
         INTERACTIVE_IN drive
         {
            enable = "0";
            file = "_input_data_stream.dat";
            mutex = "_input_data_mutex.dat";
            log = "_in.log";
            rate = "100";
            signals = "temp,list";
            exe = "perl -- uart.pl";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         baud = "115200";
         data_bits = "8";
         fixed_baud = "1";
         parity = "N";
         stop_bits = "1";
         sync_reg_depth = "2";
         use_cts_rts = "0";
         use_eop_register = "0";
         sim_true_baud = "0";
         sim_char_stream = "";
         relativepath = "1";
      }
   }
   MODULE button_pio
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "4";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "5";
            }
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000180";
            }
            Base_Address = "0x08000180";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
         PORT in_port
         {
            type = "export";
            width = "4";
            direction = "input";
            Is_Enabled = "1";
            test_bench_value = "15";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "4";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "4";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 4-bit PIO using <br>
					
					 input pins with edge type RISING and interrupt source EDGE
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "1";
         Driven_Sim_Value = "15";
         has_tri = "0";
         has_out = "0";
         has_in = "1";
         capture = "1";
         Data_Width = "4";
         reset_value = "0";
         edge_type = "RISING";
         irq_type = "EDGE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
   }
   MODULE led_pio
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "8";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "8";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x000001a0";
            }
            Base_Address = "0x080001a0";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "0";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
         PORT out_port
         {
            type = "export";
            width = "8";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "8";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "8";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 8-bit PIO using <br>
					
					
					 output pins";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "1";
         has_in = "0";
         capture = "0";
         Data_Width = "8";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
   }
   MODULE pio_id_eeprom_scl
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000240";
            }
            Base_Address = "0x08000240";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "0";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
         PORT out_port
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "1";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					
					
					 output pins";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "1";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
   }
   MODULE lcd_i2c_scl
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x000001e0";
            }
            Base_Address = "0x080001e0";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "0";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
         PORT out_port
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "1";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					
					
					 output pins";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "1";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
   }
   MODULE lcd_i2c_en
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x000001c0";
            }
            Base_Address = "0x080001c0";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "0";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
         PORT out_port
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "1";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					
					
					 output pins";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "1";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
   }
   MODULE pio_id_eeprom_dat
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000220";
            }
            Base_Address = "0x08000220";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
         PORT bidir_port
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
            test_bench_value = "0";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "1";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					 tri-state pins with edge type NONE and interrupt source NONE
					
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "1";
         Driven_Sim_Value = "0";
         has_tri = "1";
         has_out = "0";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
   }
   MODULE lcd_i2c_sdat
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000200";
            }
            Base_Address = "0x08000200";
            Has_IRQ = "0";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
         PORT bidir_port
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
            test_bench_value = "0";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "1";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					 tri-state pins with edge type NONE and interrupt source NONE
					
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "1";
         Driven_Sim_Value = "0";
         has_tri = "1";
         has_out = "0";
         has_in = "0";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
   }
   MODULE touch_panel_pen_irq_n
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "6";
            }
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000260";
            }
            Base_Address = "0x08000260";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
         PORT in_port
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
            test_bench_value = "0";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "1";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					
					 input pins with edge type FALLING and interrupt source EDGE
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "1";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "0";
         has_in = "1";
         capture = "1";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "FALLING";
         irq_type = "EDGE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
   }
   MODULE touch_panel_spi
   {
      SLAVE spi_control_port
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT data_from_cpu
            {
               type = "writedata";
               width = "16";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT data_to_cpu
            {
               type = "readdata";
               width = "16";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT mem_addr
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT read_n
            {
               type = "read_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT spi_select
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT dataavailable
            {
               type = "dataavailable";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT readyfordata
            {
               type = "readyfordata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Write_Wait_States = "1cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "7";
            }
            MASTERED_BY slow_peripheral_bridge/m1
            {
               priority = "1";
               Offset_Address = "0x00000140";
            }
            Base_Address = "0x08000140";
            Address_Group = "0";
         }
      }
      PORT_WIRING 
      {
         PORT MISO
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT MOSI
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT SCLK
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT SS_n
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         databits = "8";
         datawidth = "16";
         targetclock = "32000";
         clockunits = "Hz";
         clockmult = "1";
         numslaves = "1";
         ismaster = "1";
         clockpolarity = "0";
         clockphase = "0";
         lsbfirst = "0";
         extradelay = "0";
         insert_sync = "0";
         sync_reg_depth = "2";
         disableAvalonFlowControl = "0";
         targetssdelay = "0.0";
         delayunits = "ns";
         delaymult = "1.0E-9";
         prefix = "spi_";
      }
      class = "altera_avalon_spi";
      class_version = "7.08101";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Clock_Source = "pll_c2_out";
         Has_Clock = "1";
         Instantiate_In_System_Module = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
   }
   MODULE lcd_ta_sgdma_to_fifo
   {
      SLAVE in
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT in_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_data
            {
               type = "data";
               width = "64";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_empty
            {
               type = "empty";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_sgdma/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING 
         {
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_data
            {
               type = "data";
               width = "64";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_empty
            {
               type = "empty";
               width = "3";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08101";
      gtf_class_name = "timing_adapter";
      gtf_class_version = "10.1";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "ddr2_sdram_phy_clk_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL aaa
            {
               name = "clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aab
            {
               name = "reset_n";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aac
            {
               name = "in_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aad
            {
               name = "in_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aae
            {
               name = "in_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aaf
            {
               name = "in_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aag
            {
               name = "in_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aah
            {
               name = "in_empty";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aai
            {
               name = "out_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aaj
            {
               name = "out_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aak
            {
               name = "out_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aal
            {
               name = "out_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aam
            {
               name = "out_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aan
            {
               name = "out_empty";
               radix = "hexadecimal";
               conditional = "1";
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_ta_sgdma_to_fifo.v";
         Synthesis_Only_Files = "__PROJECT_DIRECTORY__/lcd_ta_sgdma_to_fifo.v";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
   MODULE lcd_pixel_fifo
   {
      SLAVE in
      {
         PORT_WIRING 
         {
            PORT wrclock
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT wrreset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_data
            {
               type = "data";
               width = "64";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_empty
            {
               type = "empty";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_sink_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            Clock_Source = "ddr2_sdram_phy_clk_out";
            Has_Clock = "1";
            MASTERED_BY lcd_ta_sgdma_to_fifo/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
         }
      }
      MASTER out
      {
         PORT_WIRING 
         {
            PORT rdclock
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT rdreset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT avalonst_source_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT avalonst_source_data
            {
               type = "data";
               width = "64";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT avalonst_source_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT avalonst_source_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT avalonst_source_empty
            {
               type = "empty";
               width = "3";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT avalonst_source_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Clock_Source = "pll_c0_out";
            Has_Clock = "1";
         }
      }
      class = "altera_avalon_fifo";
      class_version = "7.08101";
      iss_model_name = "altera_avalon_fifo";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Device_Family = "CYCLONEIII";
         Use_Register = "0";
         Single_Clock_Mode = "0";
         FIFO_Depth = "128";
         Use_Write_Control = "0";
         Use_Read_Control = "0";
         Use_IRQ = "0";
         Use_AvalonMM_Write_Slave = "0";
         Use_AvalonMM_Read_Slave = "0";
         Use_AvalonST_Sink = "1";
         Use_AvalonST_Source = "1";
         Use_Backpressure = "1";
         AvalonMM_AvalonMM_Data_Width = "32";
         Bits_Per_Symbol = "8";
         Symbols_Per_Beat = "8";
         AvalonMM_AvalonST_Data_Width = "32";
         Error_Width = "0";
         Channel_Width = "0";
         Use_Packet = "1";
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL signal_0
            {
               name = "wrclock";
               conditional = "1";
            }
            SIGNAL signal_1
            {
               name = "wrreset_n";
               conditional = "1";
            }
            SIGNAL signal_2
            {
               name = "avalonst_sink_valid";
               conditional = "1";
            }
            SIGNAL signal_3
            {
               name = "avalonst_sink_data";
               conditional = "1";
               radix = "hexadecimal";
            }
            SIGNAL signal_4
            {
               name = "avalonst_sink_startofpacket";
               conditional = "1";
            }
            SIGNAL signal_5
            {
               name = "avalonst_sink_endofpacket";
               conditional = "1";
            }
            SIGNAL signal_6
            {
               name = "avalonst_sink_empty";
               conditional = "1";
            }
            SIGNAL signal_7
            {
               name = "avalonst_sink_ready";
               conditional = "1";
            }
            SIGNAL signal_8
            {
               name = "rdclock";
               conditional = "1";
            }
            SIGNAL signal_9
            {
               name = "rdreset_n";
               conditional = "1";
            }
            SIGNAL signal_10
            {
               name = "avalonst_source_valid";
               conditional = "1";
            }
            SIGNAL signal_11
            {
               name = "avalonst_source_data";
               conditional = "1";
               radix = "hexadecimal";
            }
            SIGNAL signal_12
            {
               name = "avalonst_source_startofpacket";
               conditional = "1";
            }
            SIGNAL signal_13
            {
               name = "avalonst_source_endofpacket";
               conditional = "1";
            }
            SIGNAL signal_14
            {
               name = "avalonst_source_empty";
               conditional = "1";
            }
            SIGNAL signal_15
            {
               name = "avalonst_source_ready";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Has_Clock = "1";
         Clock_Source = "clk";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         # The list of files associated with this module (for synthesis
         # and other purposes) depends on the users' wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the
         # various filenames are known.
      }
      PORT_WIRING 
      {
         # The number and kind of ports that appear on this module
         # depends on the user's wizard-choices.
         # This section will be filled-in by the Generator_Program
         # after the module logic has been created and the ports are known.
         #
      }
   }
   MODULE lcd_ta_fifo_to_dfa
   {
      SLAVE in
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT in_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_data
            {
               type = "data";
               width = "64";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_empty
            {
               type = "empty";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_pixel_fifo/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING 
         {
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_data
            {
               type = "data";
               width = "64";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_empty
            {
               type = "empty";
               width = "3";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08101";
      gtf_class_name = "timing_adapter";
      gtf_class_version = "10.1";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL aaa
            {
               name = "clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aab
            {
               name = "reset_n";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aac
            {
               name = "in_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aad
            {
               name = "in_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aae
            {
               name = "in_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aaf
            {
               name = "in_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aag
            {
               name = "in_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aah
            {
               name = "in_empty";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aai
            {
               name = "out_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aaj
            {
               name = "out_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aak
            {
               name = "out_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aal
            {
               name = "out_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aam
            {
               name = "out_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aan
            {
               name = "out_empty";
               radix = "hexadecimal";
               conditional = "1";
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_ta_fifo_to_dfa.v,__PROJECT_DIRECTORY__/lcd_ta_fifo_to_dfa_fifo.v";
         Synthesis_Only_Files = "__PROJECT_DIRECTORY__/lcd_ta_fifo_to_dfa.v,__PROJECT_DIRECTORY__/lcd_ta_fifo_to_dfa_fifo.v";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
   MODULE lcd_64_to_32_bits_dfa
   {
      SLAVE in
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT in_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_data
            {
               type = "data";
               width = "64";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_empty
            {
               type = "empty";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_ta_fifo_to_dfa/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING 
         {
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_data
            {
               type = "data";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_empty
            {
               type = "empty";
               width = "2";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08101";
      gtf_class_name = "data_format_adapter";
      gtf_class_version = "10.1";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL aaa
            {
               name = "clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aab
            {
               name = "reset_n";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aac
            {
               name = "in_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aad
            {
               name = "in_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aae
            {
               name = "in_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aaf
            {
               name = "in_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aag
            {
               name = "in_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aah
            {
               name = "in_empty";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aai
            {
               name = "out_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aaj
            {
               name = "out_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aak
            {
               name = "out_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aal
            {
               name = "out_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aam
            {
               name = "out_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aan
            {
               name = "out_empty";
               radix = "hexadecimal";
               conditional = "1";
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_64_to_32_bits_dfa.v,__PROJECT_DIRECTORY__/lcd_64_to_32_bits_dfa_state_ram.v,__PROJECT_DIRECTORY__/lcd_64_to_32_bits_dfa_data_ram.v";
         Synthesis_Only_Files = "__PROJECT_DIRECTORY__/lcd_64_to_32_bits_dfa.v,__PROJECT_DIRECTORY__/lcd_64_to_32_bits_dfa_state_ram.v,__PROJECT_DIRECTORY__/lcd_64_to_32_bits_dfa_data_ram.v";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
   MODULE lcd_pixel_converter
   {
      SLAVE in
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ready_out
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT valid_in
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT data_in
            {
               type = "data";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT eop_in
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT sop_in
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT empty_in
            {
               type = "empty";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_64_to_32_bits_dfa/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING 
         {
            PORT ready_in
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT valid_out
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT data_out
            {
               type = "data";
               width = "24";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT eop_out
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT sop_out
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT empty_out
            {
               type = "empty";
               width = "2";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08101";
      gtf_class_name = "altera_avalon_pixel_converter";
      gtf_class_version = "10.1";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "D:\\WL\\Project\\QII_RTA\\results\\linux64\\cycloneIII_3c120_embedded\\examples\\application_selector/lcd_pixel_converter.vo";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
   MODULE lcd_32_to_8_bits_dfa
   {
      SLAVE in
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT in_valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_data
            {
               type = "data";
               width = "24";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT in_empty
            {
               type = "empty";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_pixel_converter/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
         }
      }
      MASTER out
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
         }
         PORT_WIRING 
         {
            PORT out_ready
            {
               type = "ready";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT out_valid
            {
               type = "valid";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_data
            {
               type = "data";
               width = "8";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_startofpacket
            {
               type = "startofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_endofpacket
            {
               type = "endofpacket";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT out_empty
            {
               type = "empty";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08101";
      gtf_class_name = "data_format_adapter";
      gtf_class_version = "10.1";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL aaa
            {
               name = "clk";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aab
            {
               name = "reset_n";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aac
            {
               name = "in_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aad
            {
               name = "in_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aae
            {
               name = "in_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aaf
            {
               name = "in_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aag
            {
               name = "in_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aah
            {
               name = "in_empty";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aai
            {
               name = "out_ready";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aaj
            {
               name = "out_valid";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aak
            {
               name = "out_data";
               radix = "hexadecimal";
               conditional = "1";
            }
            SIGNAL aal
            {
               name = "out_startofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aam
            {
               name = "out_endofpacket";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL aan
            {
               name = "out_empty";
               radix = "binary";
               conditional = "1";
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/lcd_32_to_8_bits_dfa.v,__PROJECT_DIRECTORY__/lcd_32_to_8_bits_dfa_state_ram.v,__PROJECT_DIRECTORY__/lcd_32_to_8_bits_dfa_data_ram.v";
         Synthesis_Only_Files = "__PROJECT_DIRECTORY__/lcd_32_to_8_bits_dfa.v,__PROJECT_DIRECTORY__/lcd_32_to_8_bits_dfa_state_ram.v,__PROJECT_DIRECTORY__/lcd_32_to_8_bits_dfa_data_ram.v";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
   MODULE lcd_sync_generator
   {
      SLAVE in
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT ready
            {
               type = "ready";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT valid
            {
               type = "valid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT data
            {
               type = "data";
               width = "8";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT eop
            {
               type = "endofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT sop
            {
               type = "startofpacket";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT empty
            {
               type = "empty";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "atlantic";
            Accepts_Internal_Connections = "1";
            MASTERED_BY lcd_32_to_8_bits_dfa/out
            {
               priority = "0";
            }
            Address_Group = "0";
            Base_Address = "0x00000000";
         }
      }
      PORT_WIRING 
      {
         PORT RGB_OUT
         {
            type = "export";
            width = "8";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT HD
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT VD
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT DEN
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
      }
      class = "no_legacy_module";
      class_version = "7.08101";
      gtf_class_name = "altera_avalon_video_sync_generator";
      gtf_class_version = "10.1";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "pll_c0_out";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "D:\\WL\\Project\\QII_RTA\\results\\linux64\\cycloneIII_3c120_embedded\\examples\\application_selector/lcd_sync_generator.vo";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
   MODULE sls_sdhc
   {
      SLAVE control
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvS_irq
            {
               type = "irq";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT AvS_address
            {
               type = "address";
               width = "5";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvS_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvS_write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvS_read_n
            {
               type = "read_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvS_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvS_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT AvS_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Bus_Type = "avalon";
            Read_Wait_States = "peripheral_controlled";
            Write_Wait_States = "peripheral_controlled";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "5";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            IRQ_MASTER cpu/data_master
            {
               IRQ_Number = "8";
            }
            MASTERED_BY cpu/data_master
            {
               priority = "1";
               Offset_Address = "0x09002400";
            }
            Base_Address = "0x09002400";
            Address_Group = "0";
         }
      }
      PORT_WIRING 
      {
         PORT SD_CLK
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT SD_CMD
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT SD_DAT0
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT SD_DAT1
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT SD_DAT2
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT SD_DAT3
         {
            type = "export";
            width = "1";
            direction = "inout";
            Is_Enabled = "1";
         }
         PORT SD_In
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT SD_Wp
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT SD_Busy
         {
            type = "export";
            width = "1";
            direction = "output";
            Is_Enabled = "1";
         }
      }
      MASTER read_master
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT AvM_rd_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvM_rd_read_n
            {
               type = "read_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT AvM_rd_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT AvM_rd_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvM_rd_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvM_rd_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry sdhc_ddr_clock_bridge/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "1";
            }
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      MASTER write_master
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "32";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
         }
         PORT_WIRING 
         {
            PORT AvM_wr_address
            {
               type = "address";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT AvM_wr_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT AvM_wr_write_n
            {
               type = "write_n";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT AvM_wr_chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT AvM_wr_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT AvM_wr_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry sdhc_ddr_clock_bridge/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "1";
            }
            Entry ddr2_sdram/s1
            {
               address = "0x00000000";
               span = "0x04000000";
               is_bridge = "0";
            }
         }
      }
      class = "no_legacy_module";
      class_version = "7.08101";
      gtf_class_name = "sls_sdhc_top";
      gtf_class_version = "2.7";
      SYSTEM_BUILDER_INFO 
      {
         Do_Not_Generate = "1";
         Instantiate_In_System_Module = "1";
         Is_Bridge = "0";
         Is_Enabled = "1";
         Clock_Source = "clk";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      HDL_INFO 
      {
         Simulation_HDL_Files = "C:/altera/10.1/ip/sls/sdhc/hardware/component/hdl/sls_sdhc_top.v,C:/altera/10.1/ip/sls/sdhc/hardware/component/hdl/sls_sdhc_rx_fifo.v,C:/altera/10.1/ip/sls/sdhc/hardware/component/hdl/sls_sdhc_tx_fifo.v,D:/WL/Project/QII_RTA/results/linux64/cycloneIII_3c120_embedded/examples/application_selector/sls_sdhc.v";
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
      }
   }
}
